
<dashboard version="2" theme="dark">
    <label>NPA Client connected PoP</label>
    <description></description>
    <definition><![CDATA[
{
	"dataSources": {
		"ds_7JQOWjZh": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1  host=\"$field1$\"   sourcetype=\"npadebuglog\" \"NPAGW\" AND \"RETRANS\"\n\nearliest=[ search index=netskope_client1  host=\"$field1$\" sourcetype=\"npadebuglog\" \"NPAGW\" AND \"RETRANS\" | stats min(_time) as earliest_time | return $$earliest_time ]  \nlatest=[ search index=netskope_client1  host=\"$field1$\"  sourcetype=\"npadebuglog\" \"NPAGW\" AND \"RETRANS\" | stats max(_time) as latest_time | return $$latest_time ]\n\n| rex \"NPAGW\\s(?<NPAGW>\\d+\\.\\d+\\.\\d+\\.\\d+): RETRANS:(?<RETRANS>\\d+)/(?<TOTAL>\\d+).*?RTT:(?<RTT>\\d+)ms\"\n| timechart span=30m avg(RETRANS) as RETRANS avg(TOTAL) as TOTAL  useother=false",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA RETRANS"
		},
		"ds_nwd5jErf": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog sourcetype=npadebuglog \"Getting policy rule\" OR \"No matching\"\n| rex field=_raw \"(?<LogTime>\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3})\\s.*host\\s(?<dsthost>.*)\\sip\\s(?<hex>.*),\\sproto\\s(?<proto>.*)\\sport\\s(?<port>.*)\"\n| rex field=hex \"(?<d1>[0-9A-Fa-f]{1,2})(?<d2>[0-9A-Fa-f]{2})(?<d3>[0-9A-Fa-f]{2})(?<d4>[0-9A-Fa-f]{2})\"\n| rex field=_raw \"(?<msg>No\\smatching.*)\"\n| eval ip_from_Hex=if(isnotnull(hex), tostring(tonumber(d4,16))+\".\"+tostring(tonumber(d3,16))+\".\"+tostring(tonumber(d2,16))+\".\"+tostring(tonumber(d1,16)), null)\n| eval dsthost=if(isnull('dsthost'), msg, dsthost)\n| table LogTime, dsthost, hex, ip_from_Hex, proto, port\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA - Access attempt search"
		},
		"ds_p8PZ4Okn": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog \"Adding\" AND \"Rule\"\n| rex field=_raw \"\\sRule\\s(?<rule>[\\s\\S]*)\"\n| rex field=rule \"Name:\\s(?<Policy>.*)\"\n| rex field=rule \"(?<Target>.*:.*:.*;)\"\n| rex field=rule \"Action:(?<Action>.*)\"\n| rex field=rule \"Publisher[s]:(?<Publisher>.*)\"\n| rex field=rule \"Use\\sPrivate\\sDNS\\:(?<Use_Private_DNS>.*)\"\n| fillnull value=null Policy, Target, Action, Stitcher, Publisher, Use_Private_DNS\n| stats values(Target) as Target count by Policy, Publisher, Action,  Use_Private_DNS\n| sort -count",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Rule"
		},
		"ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"TLS client established connection\" OR \"NPA Tunnel Status: Connected\"\n\nearliest=[ search index=netskope_client1 host=\"$field1$\" \"TLS client established connection\" OR \"NPA Tunnel Status: Connected\" | stats min(_time) as earliest_time | return $earliest_time ]  \nlatest=[ search index=netskope_client1 host=\"$field1$\" \"TLS client established connection\" OR \"NPA Tunnel Status: Connected\" | stats max(_time) as latest_time | return $latest_time ]\n\n| rex field=_raw \"(?<NPA_GW>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\"\n| timechart  count by NPA_GW useother=false",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA Connected PoPs - Timechart"
		},
		"ds_7CpRsbSg": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"\n| stats earliest(_time) AS Earliest, latest(_time) AS Latest by sourcetype\n| convert timeformat=\"%Y-%m-%d %H:%M:%S\" ctime(Earliest) ctime(Latest)",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "Log_timestamps"
		},
		"ds_6a2VT9JD": {
			"type": "ds.search",
			"options": {
				"query": "| tstats values(host) as hosts where index=netskope_client1 by host\n| table hosts\n| sort -hosts",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Select Client log"
		},
		"ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"post client rtt\" AND npa\n| rex field=_raw \"\\[(?<Client>.*)\\]:\\spost\\sclient\\srtt\\spop\\:(?<PoP>.*)\\sip\\:(?<GatewayIP>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\srtt:(?<RTT>\\d+)\"\n| where Client=\"NPA\"\n| eval Dst=Client.\"_\".PoP.\"_\".GatewayIP\n| stats avg(RTT) as AvgRTT by Dst\n| eval AvgRTT=round(AvgRTT, 2)\n| sort AvgRTT, Dst",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA GSLB RTT"
		},
		"ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"  \"TLS client established connection\" OR \"NPA Tunnel Status: Connected\"\n| rex field=_raw \"(?<NPA_GW>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\"\n| stats count by NPA_GW",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA Connected PoPs - Pie chart"
		},
		"ds_USxTAkrP_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=\"npadebuglog\"  \"NPAGW\" AND \"RETRANS\" AND \"RTT\"\n\nearliest=[ search index=netskope_client1 host=\"$field1$\"  sourcetype=npadebuglog | stats min(_time) as earliest_time | return $earliest_time ]  \nlatest=[ search index=netskope_client1 host=\"$field1$\"  sourcetype=npadebuglog | stats max(_time) as latest_time | return $latest_time ]\n\n| rex field=_raw \"NPAGW\\s(?<NPAGW>.*):\\sRETRANS.*RTT:(?<RTT>\\d+)ms,\"\n| timechart span=1h max(RTT) as RTT by NPAGW",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPP Avg RTT"
		},
		"ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"nsDnsResolver.cpp\" AND \"dnsResolver\" AND Failed\n| rex field=_raw \"(?<Gateway>gateway.*)\\sby\\s(?<DNS>.*)\" \n| eval DNS=DNS.\"_\".Gateway\n| stats count by DNS\n| sort -count",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS failure"
		},
		"ds_7coO7GaE_ds_USxTAkrP_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"TLS client established connection\" OR \"NPA Tunnel Status: Connected\"\n| rex field=_raw \"(?<GatewayIP>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\"\n| iplocation GatewayIP \n| geostats latfield=lat longfield=lon count by GatewayIP",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA GatewayIP - Map"
		},
		"ds_HuwBRM3v_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "host=\"$field1$\" index=netskope_json1 sourcetype=nsconfig source=\"*nsconfig.json\" AND NOT source=\"*prelogon_nsconfig.json\"\n| rename \ngslb.host as \"001. gslb.host\",\ngslb.port as \"002. gslb.port\",\nnpa.gslb.port as \"003. gslb.port\",\nnpa.gslb.port as \"004. gslb.port\",\nnpa_gslb_client* as \"005. npa_gslb_client*\"\n| table 0*\n| transpose 0 column_name=\"header\":\n| fields - \"column\"",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "GSLB setting"
		},
		"ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog \"gw_resolution\"\n| rex field=_raw \"Device\\sInfo:\\s(?<DeviceInfo>.*)\"\n| spath input=DeviceInfo\n| stats count by device.assessment.gw_resolution",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS resolved"
		},
		"ds_QkgEDkPy_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"\nsourcetype=nsdebuglog \"nsDnsResolver.cpp\" AND \"dnsResolver\" AND \"*DNS\"\n\nearliest=[ search index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog | stats min(_time) as earliest_time | return $earliest_time ]  \nlatest=[ search index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog | stats max(_time) as latest_time | return $latest_time ]\n\n| rex field=_raw \"(?<Gateway>gateway.*)\\sby\\s(?<DNS>.*)\" \n| eval MSG=DNS.\"_\".Gateway\n| timechart usenull=false count by MSG",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS timechart"
		},
		"ds_7Y9oH6d8_ds_p8PZ4Okn": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 host=\"$field1$\" source=\"*nssteering.json\" source=\"*nssteering.json\"\n| rename steering_config_name as \"001. steering_config_name\", private_* as \"002. private_*\"\n| table 00*, source\n| transpose",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "steering config NPA"
		},
		"ds_m1xwGxUM_ds_nwd5jErf": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"Next re-auth prompt at\" OR \"Reauthentication request received\" OR \"Shutdown packet received from gateway\" OR \"Change State from\" OR  \"Private Access=\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3})\" \n| rex field=_raw \"prompt\\sat\\s\\[(?<NextPrompt>.*)\\].*expiry\\sat\\s\\[(?<Expiry>.*)\\].*\\[(?<CurrentTime>.*)]\" \n| eval LogTime = replace(LogTime, \"-\", \"/\")\n| eval myNextPrompt=strftime(NextPrompt, \"%Y-%m-%d %H:%M:%S\")\n| eval myExpiry=strftime(Expiry, \"%y-%m-%d %H:%M:%S\")\n| eval myCurrentTime=strftime(CurrentTime, \"%y-%m-%d %H:%M:%S\")\n| eval Result=if(isnotnull(CurrentTime), if(Expiry-CurrentTime>10, \"Authentication likely succeeded.\", \"Authentication likely failed.\"), null())\n| eval Result=if(isnull(Result), _raw ,Result)\n| eval NextPrompt=NextPrompt.\" (\".myNextPrompt.\")\"\n| eval Expiry=Expiry.\" (\".myExpiry.\")\"\n| eval CurrentTime=CurrentTime.\" (\".myCurrentTime.\")\"\n| table LogTime, NextPrompt, Expiry, CurrentTime, Result\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA - Re-auth period"
		},
		"ds_uymu0ww9": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"user input post payload is\" OR \"Change State from\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*TenantName=(?<Tenant>.*)&UTCEpoch=(?<UTCEpoch>.*)\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*from:\\s(?<From>.*)\\sto\\s(?<To>.*)\"\n| eval UTCtime=if(isnull(UTCEpoch), null(), strftime(UTCEpoch, \"%Y-%m-%d %H:%M:%S\"))\n| eval UTCEpoch=UTCEpoch.\"(\".UTCtime.\")\"\n| table LogTime, Tenant, UTCEpoch, From, To\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "IDP Enrollment"
		},
		"ds_nz8SDx8s_ds_uymu0ww9": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=\"nsAppUI\" \"systemtray Service status\" OR \"===\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*\\[Internet\\sSecurity=(?<InternetSecurity>[^\\]]*)\\](?:\\s\\[Private\\sAccess=(?<PrivateAccess>[^\\]]*)\\])?(?:\\s\\[Endpoint\\sDLP=(?<EndpointDLP>[^\\]]*)\\])?\"\n| eval _time=strptime(LogTime, \"%Y/%m/%d %H:%M:%S.%3N\")\n| table LogTime, InternetSecurity, PrivateAccess, EndpointDLP\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "System tray status"
		},
		"ds_a2c3mLQy_ds_nwd5jErf": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog sourcetype=\"npadebuglog\"  \"set clientId\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*clientId\\s(?<clientId>.*)\" \n| table LogTime, clientId\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA clientId"
		},
		"ds_JmylvZNC_ds_nwd5jErf": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog \"Added protocols\"\n| rex field=_raw \"Added\\sprotocols\\s(?<AddedProtocols>.*)\"\n| stats values(AddedProtocols) as AddedProtocols",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Private app - IP based entries"
		},
		"ds_89suN3V0_ds_nz8SDx8s_ds_uymu0ww9": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=\"npadebuglog\" \"Device Info:\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*Device\\sInfo:\\s(?<DeviceInfo>.*)\"\n| spath input=DeviceInfo\n| eval device.assessment.last_logon_time=strftime('device.assessment.last_logon_time', \"%Y/%m/%d %H:%M:%S\")\n| rename device.assessment.* as *\n| table LogTime, user_email, last_logon_time,  last_logon_time, device.client_version, gw_resolution, machine_name, managed, npa_srpv2, on_prem_status, policyVersion, tunnel_type\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA device info"
		},
		"ds_mQwCCCTp_ds_89suN3V0_ds_nz8SDx8s_ds_uymu0ww9": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=\"npadebuglog\" \"Device Info:\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*Device\\sInfo:\\s(?<DeviceInfo>.*)\"\n| spath input=DeviceInfo\n| rename device.* as *\n| table LogTime, client_version, common_name, device_id_version, hardware_identifier, magic_identifier, netskope_device_id, vendor_identifier\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA device info 2"
		},
		"ds_06TjpE1c_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"  sourcetype=nsdebuglog \"post client rtt\" \n| rex field=_raw \"\\[(?<Client>.*)\\]:\\spost\\sclient\\srtt\\spop\\:(?<PoP>.*)\\sip\\:(?<GatewayIP>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\srtt:(?<RTT>\\d+)\"\n| eval Dst=Client.\"_\".PoP.\"_\".GatewayIP\n| stats avg(RTT) as AvgRTT by Dst\n| eval AvgRTT=round(AvgRTT, 2)\n| sort AvgRTT, Dst",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "GSLB RTT copy 1"
		},
		"ds_8xWNZJiy_ds_nz8SDx8s_ds_uymu0ww9": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=\"nsAppUI\" \"systemtray Service status\" OR \"===\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*Service\\sstatus\\s:\\s\\[(?<field1>[^\\]]+)\\](?: \\[(?<field2>[^\\]]+)\\])?(?: \\[(?<field3>[^\\]]+)\\])?\"\n| table LogTime, field1 field2 field3\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "System tray status copy 1"
		},
		"ds_KP1V9siQ": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 sourcetype=\"nsconfig\" source=\"*nsuserconfig.json\" host=\"$field1$\" \n| stats count as result_count\n| eval peruseconfig = if(result_count > 0, \"true\", \"false\")\n| table peruseconfig",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "Peruser mode"
		},
		"ds_6wLtfs7H_ds_KP1V9siQ": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 source=\"*nsconfig.json\" AND NOT source=\"*prelogon_nsconfig.json\" host=\"$field1$\"\n| table clientConfig.MDMSecureEnrollmentTokenEnabled",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "Secure Enrollment"
		},
		"ds_iohORCkR_ds_nz8SDx8s_ds_uymu0ww9": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"  sourcetype=\"npadebuglog\" \"Device Info:\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*Device\\sInfo:\\s(?<DeviceInfo>.*)\"\n| spath input=DeviceInfo\n| stats values(device.assessment.user_email) as \"001. device.assessment.user_email\", \nvalues(device.client_version) as \"002. device.client_version\", \nvalues(device.common_name) as \"003. device.common_name\", \nvalues(device.device_id_version) as \"004. device.device_id_version\", \nvalues(device.hardware_identifier) as \"005. device.hardware_identifier\", \nvalues(device.magic_identifier) as \"006. device.magic_identifier\", \nvalues(device.netskope_device_id) as \"007. device.netskope_device_id\", \nvalues(device.new_identifier) as \"008. device.new_identifier\", \nvalues(device.vendor_identifier) as \"009. device.vendor_identifier\"\n| table 00*\n| transpose 0 column_name=\"header\":",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA basic infomation"
		},
		"ds_nnzBGClt_ds_USxTAkrP_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=\"nsAppUI\" \"systemtray Service status\" OR \"===\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*\\[Internet\\sSecurity=(?<InternetSecurity>[^\\]]*)\\](?:\\s\\[Private\\sAccess=(?<PrivateAccess>[^\\]]*)\\])?(?:\\s\\[Endpoint\\sDLP=(?<EndpointDLP>[^\\]]*)\\])?\"\n| eval _time=strptime(LogTime, \"%Y/%m/%d %H:%M:%S.%3N\")\n| timechart count by PrivateAccess usenull=false",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NP system tray"
		},
		"ds_8jat6ydz_ds_iohORCkR_ds_nz8SDx8s_ds_uymu0ww9": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"user input post payload is\" OR \"Change State from\" OR \"systemtray Service status\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*TenantName=(?<Tenant>.*)&UTCEpoch=(?<UTCEpoch>.*)\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*State\\sfrom:\\s(?<FromTo>.*)\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*Service\\sstatus\\s:\\s(?<ServiceStatus>.*)\"\n| eval MSG=if(isnotnull(FromTo), 'FromTo', 'MSG')\n| eval MSG=if(isnotnull(UTCEpoch), Tenant.\" \".UTCEpoch.\" (\".strftime(UTCEpoch, \"%Y-%m-%d %H:%M:%S\").\")\", 'MSG')\n| eval MSG=if(isnotnull(ServiceStatus), 'ServiceStatus', 'MSG')\n| table LogTime, MSG\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Enrollment"
		},
		"ds_T9mK391v_ds_iohORCkR_ds_nz8SDx8s_ds_uymu0ww9": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 host=\"$field1$\" sourcetype=\"nsconfig\" source=\"*nsconfig.json\"\n| table clientConfig.configurationName, privateApps*, source\n| transpose",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA basic infomation copy 1"
		},
		"ds_DobnpawB_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"post client rtt\" AND npa\r\n\r\nearliest=[ search index=netskope_client1 host=\"$field1$\"  sourcetype=nsdebuglog \"post client rtt\" AND npa | stats min(_time) as earliest_time | return $earliest_time ]  \r\nlatest=[ search index=netskope_client1 host=\"$field1$\"  sourcetype=nsdebuglog \"post client rtt\"  AND npa | stats max(_time) as latest_time | return $latest_time ]\r\n\r\n| rex field=_raw \"\\[(?<Client>.*)\\]:\\spost\\sclient\\srtt\\spop\\:(?<PoP>.*)\\sip\\:(?<GatewayIP>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\srtt:(?<RTT>\\d+)\"\r\n| eval Dst=Client.\"_\".PoP.\"_\".GatewayIP\r\n| timechart span=15m max(RTT) by Dst  useother=false",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA GSLB RTT tunechart"
		},
		"ds_az2tUa7d_ds_8jat6ydz_ds_iohORCkR_ds_nz8SDx8s_ds_uymu0ww9": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"  sourcetype=npadebuglog \"Next re-auth prompt\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*prompt\\sat\\s\\[(?<PromptAt>\\d+)\\].*expiry\\sat\\s\\[(?<ExpiryAt>\\d+)\\].*time\\s\\[(?<Current>\\d+)\\]\" \n| eval MyPromptAt = strftime(PromptAt, \"%Y/%m/%d %H:%M:%S\")\n| eval PromptAt = PromptAt.\" (\".MyPromptAt.\")\"\n| eval MyExpiryAt = strftime(ExpiryAt, \"%Y/%m/%d %H:%M:%S\")\n| eval ExpiryAt = ExpiryAt.\" (\".MyExpiryAt.\")\"\n| eval MyCurrent = strftime(Current, \"%Y/%m/%d %H:%M:%S\")\n| eval Current = Current.\" (\".MyCurrent.\")\"\n| table LogTime, PromptAt, ExpiryAt, Current\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Next re-auth prompt"
		},
		"ds_MvvILDzy_ds_DobnpawB_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"  sourcetype=\"npadebuglog\" \"NPAGW\" AND \"RETRANS\"\r\n\r\nearliest=[ search index=netskope_client1 host=\"$field1$\" sourcetype=\"npadebuglog\" \"NPAGW\" AND \"RETRANS\" | stats min(_time) as earliest_time | return $earliest_time ]  \r\nlatest=[ search index=netskope_client1 host=\"$field1$\" sourcetype=\"npadebuglog\" \"NPAGW\" AND \"RETRANS\" | stats max(_time) as latest_time | return $latest_time ]\r\n\r\n| rex \"NPAGW\\s(?<NPAGW>\\d+\\.\\d+\\.\\d+\\.\\d+): RETRANS:(?<RETRANS>\\d+)/(?<TOTAL>\\d+).*?RTT:(?<RTT>\\d+)ms\"\r\n| timechart span=5m avg(RETRANS) as RETRANSE avg(TOTAL) as TOTAL  useother=false\r\n\r\n",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA RETRANS RTT"
		},
		"ds_gxcWJCPD_ds_MvvILDzy_ds_DobnpawB_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"  sourcetype=\"npadebuglog\" \"NPAGW\" AND \"RETRANS\"\r\n\r\nearliest=[ search index=netskope_client1 host=\"$field1$\" sourcetype=\"npadebuglog\" \"NPAGW\" AND \"RETRANS\" | stats min(_time) as earliest_time | return $earliest_time ]  \r\nlatest=[ search index=netskope_client1 host=\"$field1$\" sourcetype=\"npadebuglog\" \"NPAGW\" AND \"RETRANS\" | stats max(_time) as latest_time | return $latest_time ]\r\n\r\n| rex \"NPAGW\\s(?<NPAGW>\\d+\\.\\d+\\.\\d+\\.\\d+): RETRANS:(?<RETRANS>\\d+)/.*?RTT:(?<RTT>\\d+)ms\"\r\n| timechart span=5m avg(RTT) as RTT by NPAGW useother=false",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA RETRANS RTT copy 1"
		}
	},
	"visualizations": {
		"viz_WYpR7WwS": {
			"type": "splunk.column",
			"options": {
				"yAxisAbbreviation": "auto",
				"y2AxisAbbreviation": "auto",
				"showRoundedY2AxisLabels": false,
				"legendTruncation": "ellipsisMiddle",
				"showY2MajorGridLines": true,
				"xAxisLabelRotation": 0,
				"xAxisTitleVisibility": "show",
				"yAxisTitleVisibility": "show",
				"yAxisScale": "log",
				"overlayFields": [
					"RETRANS"
				],
				"stackMode": "auto",
				"showSplitSeries": false,
				"showIndependentYRanges": false,
				"legendDisplay": "bottom",
				"yAxisTitleText": "TOTAL",
				"y2AxisTitleText": "RTT",
				"y2AxisTitleVisibility": "hide"
			},
			"dataSources": {
				"primary": "ds_7JQOWjZh"
			},
			"title": "NPA RETRANS"
		},
		"viz_zI6AvR56": {
			"type": "splunk.column",
			"dataSources": {
				"primary": "ds_hLXoE9n0"
			},
			"title": "Connected PoP Timechart",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"stackMode": "stacked100",
				"legendDisplay": "bottom"
			}
		},
		"viz_UOKGClkL": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Connceted PoPs information",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_3vBhFKl4": {
			"type": "splunk.bar",
			"dataSources": {
				"primary": "ds_9ze5Vfw0"
			},
			"title": "GSLB RTT",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"legendDisplay": "bottom"
			}
		},
		"viz_pFWd9BS1": {
			"type": "splunk.pie",
			"dataSources": {
				"primary": "ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "Pie chart",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_sfVd5jAP": {
			"type": "splunk.area",
			"dataSources": {
				"primary": "ds_USxTAkrP_ds_9ze5Vfw0"
			},
			"title": "Avg RTT after connection",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"legendDisplay": "bottom",
				"xAxisTitleText": "",
				"xAxisMajorTickVisibility": "show",
				"xAxisTitleVisibility": "hide",
				"yAxisTitleText": "RTT"
			}
		},
		"viz_E52xk4if": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "DNS failure",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {},
			"context": {}
		},
		"viz_BlwX4Azv": {
			"type": "splunk.singlevalueicon",
			"options": {
				"showValue": false,
				"icon": "splunk-enterprise-kvstore://icon-load-balancer__4a4261a1-51e2-45aa-b89d-2911d1ceac62.svg"
			}
		},
		"viz_fZGekanA": {
			"type": "splunk.map",
			"dataSources": {
				"primary": "ds_7coO7GaE_ds_USxTAkrP_ds_9ze5Vfw0"
			},
			"title": "Connected PoP",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"center": [
					-8.75479217970559,
					121.28906250000921
				],
				"zoom": 0
			}
		},
		"viz_9QlENcr9": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### GSLB and DNS",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_JiZsSFaL": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_HuwBRM3v_ds_hLXoE9n0"
			},
			"title": "GSLB setting",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"columnFormat": {
					"header:": {
						"width": 92
					}
				},
				"count": 1000
			}
		},
		"viz_NBXJPXYn": {
			"type": "splunk.pie",
			"dataSources": {
				"primary": "ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "DNS resolved",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {},
			"context": {}
		},
		"viz_UZlu5Deh": {
			"type": "splunk.column",
			"dataSources": {
				"primary": "ds_QkgEDkPy_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "DNS failure",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"legendDisplay": "bottom",
				"stackMode": "stacked"
			}
		},
		"viz_dUGYORVE": {
			"type": "splunk.table",
			"options": {
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false,
				"count": 1000,
				"columnFormat": {
					"LogTime": {
						"width": 104
					},
					"InternetSecurity": {
						"width": 120
					}
				}
			},
			"dataSources": {
				"primary": "ds_nz8SDx8s_ds_uymu0ww9"
			},
			"title": "System tray status"
		},
		"viz_8JfnUvT2": {
			"type": "splunk.table",
			"options": {
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false,
				"count": 500,
				"columnFormat": {
					"client_version": {
						"width": 87
					},
					"device.client_version": {
						"width": 110
					},
					"npa_srpv2": {
						"width": 60
					},
					"user_email": {
						"width": 240
					},
					"LogTime": {
						"width": 207
					},
					"last_logon_time": {
						"width": 161
					},
					"machine_name": {
						"width": 154
					},
					"on_prem_status": {
						"width": 60
					}
				}
			},
			"dataSources": {
				"primary": "ds_89suN3V0_ds_nz8SDx8s_ds_uymu0ww9"
			},
			"title": "NPA - device info"
		},
		"viz_fU8mG4IO": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Basic information",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_LC4eSjn3": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_a2c3mLQy_ds_nwd5jErf"
			},
			"title": "Clientid",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"count": 1000
			},
			"description": "Use this value to check backend log"
		},
		"viz_xbvfawL5": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_KP1V9siQ"
			},
			"title": "Peruser mode",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_tO0EQAAr": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_6wLtfs7H_ds_KP1V9siQ"
			},
			"title": "Secure Enrollment",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_ycF3TlyM": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_iohORCkR_ds_nz8SDx8s_ds_uymu0ww9"
			},
			"title": "Basic infomation",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {},
			"context": {}
		},
		"viz_4evIJu8K": {
			"type": "splunk.column",
			"dataSources": {
				"primary": "ds_nnzBGClt_ds_USxTAkrP_ds_9ze5Vfw0"
			},
			"title": "System tray status",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"legendDisplay": "bottom",
				"yAxisScale": "log",
				"stackMode": "stacked"
			}
		},
		"viz_PCYM86QM": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_8jat6ydz_ds_iohORCkR_ds_nz8SDx8s_ds_uymu0ww9"
			},
			"title": "Enrollment history",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"columnFormat": {
					"LogTime": {
						"width": 60
					}
				},
				"count": 500
			}
		},
		"viz_3Po3IgL9": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_T9mK391v_ds_iohORCkR_ds_nz8SDx8s_ds_uymu0ww9"
			},
			"title": "Basic infomation - nsconfig",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_rmsy9TYZ": {
			"type": "splunk.area",
			"dataSources": {
				"primary": "ds_DobnpawB_ds_9ze5Vfw0"
			},
			"title": "GSLB RTT Timechart",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"legendDisplay": "bottom",
				"stackMode": "stacked"
			}
		},
		"viz_zKuLxQ2b": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_az2tUa7d_ds_8jat6ydz_ds_iohORCkR_ds_nz8SDx8s_ds_uymu0ww9"
			},
			"title": "Next re-auth prompt",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"columnFormat": {
					"LogTime": {
						"width": 60
					}
				},
				"count": 500
			}
		}
	},
	"inputs": {
		"input_isTAf6kn": {
			"options": {
				"items": [],
				"token": "field1"
			},
			"title": "Select Client log",
			"type": "input.dropdown",
			"dataSources": {
				"primary": "ds_6a2VT9JD"
			}
		},
		"input_JBiR4uV0": {
			"options": {
				"defaultValue": "0,",
				"token": "tr_n9GlxAEz"
			},
			"title": "Time Range Input Title",
			"type": "input.timerange"
		}
	},
	"layout": {
		"type": "absolute",
		"options": {
			"width": 1440,
			"height": 10000,
			"display": "actual-size"
		},
		"structure": [
			{
				"item": "viz_fU8mG4IO",
				"type": "block",
				"position": {
					"x": 10,
					"y": 10,
					"w": 1420,
					"h": 3260
				}
			},
			{
				"item": "viz_9QlENcr9",
				"type": "block",
				"position": {
					"x": 10,
					"y": 5200,
					"w": 1420,
					"h": 2070
				}
			},
			{
				"item": "viz_UOKGClkL",
				"type": "block",
				"position": {
					"x": 10,
					"y": 3280,
					"w": 1420,
					"h": 1900
				}
			},
			{
				"item": "viz_3vBhFKl4",
				"type": "block",
				"position": {
					"x": 20,
					"y": 6460,
					"w": 1400,
					"h": 390
				}
			},
			{
				"item": "viz_zI6AvR56",
				"type": "block",
				"position": {
					"x": 20,
					"y": 4210,
					"w": 1400,
					"h": 220
				}
			},
			{
				"item": "viz_pFWd9BS1",
				"type": "block",
				"position": {
					"x": 20,
					"y": 3320,
					"w": 680,
					"h": 190
				}
			},
			{
				"item": "viz_sfVd5jAP",
				"type": "block",
				"position": {
					"x": 20,
					"y": 4440,
					"w": 1400,
					"h": 380
				}
			},
			{
				"item": "viz_E52xk4if",
				"type": "block",
				"position": {
					"x": 20,
					"y": 5790,
					"w": 1400,
					"h": 260
				}
			},
			{
				"item": "viz_BlwX4Azv",
				"type": "block",
				"position": {
					"x": 330,
					"y": 3290,
					"w": 90,
					"h": 30
				}
			},
			{
				"item": "viz_fZGekanA",
				"type": "block",
				"position": {
					"x": 20,
					"y": 3520,
					"w": 1400,
					"h": 450
				}
			},
			{
				"item": "viz_JiZsSFaL",
				"type": "block",
				"position": {
					"x": 20,
					"y": 6060,
					"w": 1400,
					"h": 380
				}
			},
			{
				"item": "viz_NBXJPXYn",
				"type": "block",
				"position": {
					"x": 20,
					"y": 5520,
					"w": 1400,
					"h": 260
				}
			},
			{
				"item": "viz_UZlu5Deh",
				"type": "block",
				"position": {
					"x": 20,
					"y": 5230,
					"w": 1400,
					"h": 280
				}
			},
			{
				"item": "viz_dUGYORVE",
				"type": "block",
				"position": {
					"x": 20,
					"y": 1050,
					"w": 1400,
					"h": 350
				}
			},
			{
				"item": "viz_8JfnUvT2",
				"type": "block",
				"position": {
					"x": 20,
					"y": 2220,
					"w": 1400,
					"h": 550
				}
			},
			{
				"item": "viz_LC4eSjn3",
				"type": "block",
				"position": {
					"x": 20,
					"y": 2780,
					"w": 1400,
					"h": 480
				}
			},
			{
				"item": "viz_xbvfawL5",
				"type": "block",
				"position": {
					"x": 20,
					"y": 50,
					"w": 350,
					"h": 150
				}
			},
			{
				"item": "viz_tO0EQAAr",
				"type": "block",
				"position": {
					"x": 390,
					"y": 50,
					"w": 350,
					"h": 150
				}
			},
			{
				"item": "viz_ycF3TlyM",
				"type": "block",
				"position": {
					"x": 20,
					"y": 630,
					"w": 1400,
					"h": 410
				}
			},
			{
				"item": "viz_4evIJu8K",
				"type": "block",
				"position": {
					"x": 20,
					"y": 3980,
					"w": 1400,
					"h": 220
				}
			},
			{
				"item": "viz_PCYM86QM",
				"type": "block",
				"position": {
					"x": 20,
					"y": 1740,
					"w": 1400,
					"h": 470
				}
			},
			{
				"item": "viz_3Po3IgL9",
				"type": "block",
				"position": {
					"x": 20,
					"y": 220,
					"w": 1400,
					"h": 400
				}
			},
			{
				"item": "viz_rmsy9TYZ",
				"type": "block",
				"position": {
					"x": 20,
					"y": 6870,
					"w": 1400,
					"h": 390
				}
			},
			{
				"item": "viz_zKuLxQ2b",
				"type": "block",
				"position": {
					"x": 20,
					"y": 1410,
					"w": 1400,
					"h": 310
				}
			},
			{
				"item": "viz_WYpR7WwS",
				"type": "block",
				"position": {
					"x": 20,
					"y": 4840,
					"w": 1400,
					"h": 330
				}
			}
		],
		"globalInputs": [
			"input_isTAf6kn",
			"input_JBiR4uV0"
		]
	},
	"title": "NPA Client connected PoP",
	"description": "",
	"defaults": {
		"dataSources": {
			"ds.search": {
				"options": {
					"queryParameters": {
						"latest": "$global_time.latest$",
						"earliest": "$global_time.earliest$"
					}
				}
			}
		}
	}
}
    ]]></definition>
    <meta type="hiddenElements"><![CDATA[
{
	"hideEdit": false,
	"hideOpenInSearch": false,
	"hideExport": false
}
    ]]></meta>
</dashboard>