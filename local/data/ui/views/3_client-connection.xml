
<dashboard version="2" theme="dark">
    <label>Client conneced PoP</label>
    <description></description>
    <definition><![CDATA[
{
	"dataSources": {
		"ds_IBqh7Cpp": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog  \"connected to remote host\" OR \"443 successfully\"\n| rex field=_raw \"(?<clientip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\)?+:\"\n| iplocation clientip | geostats latfield=lat longfield=lon count by clientip",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Cluster map search"
		},
		"ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"Tunnel established to gateway\"\n| rex field=_raw \"gateway:\\s(?<gateway>.*),\\spop:\\s(?<pop>.*),\\sassigned\\sip:\\s(?<gatewayip>.*),\\sCFW\\sstatus:\\s(?<CFWStatus>.*)\"\n| timechart count by pop",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Connected PoPs - Timechart"
		},
		"ds_z0jEHn3e": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 sourcetype=nsconfig host=\"$field1$\" source=\"*nsconfig.json\"\n| rename clientConfig.configurationName as 001.clientConfig.configurationName\n| eval 002.cache.lastClientUpdatedTimestamp=strftime('cache.lastClientUpdatedTimestamp', \"%Y/%m/%d %H:%M:%S\")\n| eval 003.cache.configUpdateTimestamp=strftime('cache.configUpdateTimestamp', \"%Y/%m/%d %H:%M:%S\")\n| rename \nclientConfig.clientUpdate* as 004.clientConfig.clientUpdate*,\nclientConfig.clientUpdate.useScheduledUpgrade* as 005.clientConfig.clientUpdate.useScheduledUpgrade*\n| table 00*\n| transpose 0 column_name=\"header\":\n| fields - \"column\"",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "nsconfig.json - update settings"
		},
		"ds_3BW1BQjy": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\"  \"clientStatusHandler client status message: \"\n| head 1\n| rex field=_raw \"clientStatusHandler\\sclient\\sstatus\\smessage:\\s(?<client_status>.*)\"\n| spath input=client_status\n| rename \nclient_status.host_info.device_make as \"01. Device Maker\", \nclient_status.host_info.device_model as \"02. Device Model\",\nclient_status.host_info.os as \"03. Host OS\",\nclient_status.host_info.os_version as \"04. Host OS version\",\nclient_status.host_info.hostname as \"05. Host name\",\nclient_status.host_info.macAddresses{} as \"06. Host MAC address\",\nclient_status.host_info.serialNumber as \"07. Host serial number\"\nclient_status.host_info.nsdeviceuid as \"08. Host nsdebviceuid\",\nclient_status.host_info.old_nsdeviceuid as \"09. old_nsdeviceuid0\",\n| eval \"10. Last update time\"=strftime('client_status.host_info.last_hostinfo_update_timestamp', \"%Y/%d/%m %H:%M:%S\")\n| table 0*, 1*\n| transpose\n",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Client Status Handler"
		},
		"ds_7CpRsbSg": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"\n| stats earliest(_time) AS Earliest, latest(_time) AS Latest by sourcetype\n| convert timeformat=\"%Y-%m-%d %H:%M:%S\" ctime(Earliest) ctime(Latest)",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "Log_timestamps"
		},
		"ds_6a2VT9JD": {
			"type": "ds.search",
			"options": {
				"query": "| tstats values(host) as hosts where index=netskope_client1 by host\n| table hosts\n| sort -hosts",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Select Client log"
		},
		"ds_MRGQyb8i": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\" \"clientStatusHandler client status message: \"\n| rex field=_raw \"clientStatusHandler\\sclient\\sstatus\\smessage:\\s(?<client_status>.*)\"\n| spath input=client_status\n| rename client_status.client_version as version\n| stats count by version",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Client Version"
		},
		"ds_vKQzwM2y_ds_MRGQyb8i": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\" \"Tunnel established to gateway\"\n| rex field=_raw \"pop:\\s(?<pop>.*),\\sassigned\"\n| table _raw, pop\n| stats count by pop",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Connected PoPs"
		},
		"ds_mISQGdBb_ds_vKQzwM2y_ds_MRGQyb8i": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\" \"SteeringConfig Steering Config name:\"\n| rex field=_raw \"name:\\s(?<SteeringConf>.*)\\sTraffic\\sMode:\\s(?<TrafficMode>.*)\\sDynamic\\ssteering\\s(?<DynamicSteering>\\d)\"\n| eval DynamicSteering=if(DynamicSteering == \"1\", \"true\", \"false\")\n| stats count by SteeringConf",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Steering Configration"
		},
		"ds_lmo8JfHa": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=STAUpdate \"Verbose logging\" OR \"Running installation\" OR \": Windows \" \n| sort _time \n| table  _raw\n",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "STAUpdate"
		},
		"ds_mJF3HiBv_ds_lmo8JfHa": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" (sourcetype=nsdebuglog OR sourcetype=stagentUI) \"Config new client version\" OR \"Config download path for client update\" OR \"Config trying to download\" OR \"client auto update\" OR \"starting =\"\n| table _raw\n| sort _raw",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Update history"
		},
		"ds_4qbss7jP": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\" \"clientStatusHandler client status message: \"\n| sort -_raw\n| rex field=_raw \"clientStatusHandler\\sclient\\sstatus\\smessage:\\s(?<client_status>.*)\"\n| spath input=client_status\n| rename client_status.client_version as version\n| table _time, version\n| dedup consecutive=true version\n| sort _time",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Client version table"
		},
		"ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"  sourcetype=nsdebuglog \"post client rtt\" \n| rex field=_raw \"\\[(?<Client>.*)\\]:\\spost\\sclient\\srtt\\spop\\:(?<PoP>.*)\\sip\\:(?<GatewayIP>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\srtt:(?<RTT>\\d+)\"\n| eval Dst=Client.\"_\".PoP.\"_\".GatewayIP\n| stats avg(RTT) as AvgRTT by Dst\n| eval AvgRTT=round(AvgRTT, 2)\n| sort AvgRTT, Dst",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "GSLB RTT"
		},
		"ds_82A9aQrp_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"Tunnel established to gateway\" OR \"Proxy health\"\n| sort _raw\n| rex field=_raw \"(?<Time>^\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*nsTunnel\\s(?<MSG>.*)\"\n| rex field=MSG \"CFW\\sstatus:\\s(?<CFWStatus>.*)\"\n| table Time, MSG,",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Timeline"
		},
		"ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"Tunnel established to gateway\"\n| rex field=_raw \"gateway:\\s(?<gateway>.*),\\spop:\\s(?<pop>.*),\\sassigned\\sip:\\s(?<gatewayip>.*),\\sCFW\\sstatus:\\s(?<CFWStatus>.*)\"\n| stats count by pop",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Connected PoPs - Pie chart"
		},
		"ds_USxTAkrP_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog  \"connected to remote host\"\n| rex field=_raw \"(?<GatewayIP>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}):443,\\sRTT\\s(?<RTT>\\d+)\\smsec\"\n| timechart avg(RTT) as AvgRTT by GatewayIP\n| eval AvgRtt=round(AvgRtt, 2)",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Avg RTT"
		},
		"ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"nsDnsResolver.cpp\" AND \"dnsResolver\" AND Failed\n| rex field=_raw \"(?<Gateway>gateway.*)\\sby\\s(?<DNS>.*)\" \n| eval DNS=DNS.\"_\".Gateway\n| stats count by DNS\n| sort -count",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS failure"
		},
		"ds_7coO7GaE_ds_USxTAkrP_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog   \"Connected to\" AND \"Successfully\"\n| rex field=_raw \"(?<GatewayIP>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\"\n| iplocation GatewayIP \n| geostats latfield=lat longfield=lon count by GatewayIP",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "GatewayIP - Map"
		},
		"ds_HuwBRM3v_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "host=\"$field1$\" index=netskope_json1 sourcetype=nsconfig source=\"*nsconfig.json\" AND NOT source=\"*prelogon_nsconfig.json\"\n| rename \ngslb.host as \"001. gslb.host\",\ngslb.port as \"002. gslb.port\",\nnpa.gslb.port as \"003. gslb.port\",\nnpa.gslb.port as \"004. gslb.port\",\nnpa_gslb_client* as \"005. npa_gslb_client*\"\nprc_dp_tenant as \"006. prc_dp_tenant\"\n| table 00*\n| transpose 0 column_name=\"header\":\n| fields - \"column\"",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "GSLB setting"
		},
		"ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"nsDnsResolver.cpp\" AND \"dnsResolver\" AND NOT Failed\n| rex field=_raw \"(?<Gateway>gateway.*)\\sby\\s(?<DNS>.*)\" \n| eval DNS=DNS.\"_\".Gateway\n| stats count by DNS\n| sort -count",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS resolved"
		},
		"ds_QkgEDkPy_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"\nsourcetype=nsdebuglog \"nsDnsResolver.cpp\" AND \"dnsResolver\" AND \"*DNS\"\n| rex field=_raw \"(?<Gateway>gateway.*)\\sby\\s(?<DNS>.*)\" \n| eval MSG=DNS.\"_\".Gateway\n| timechart usenull=false count by MSG",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS timechart"
		},
		"ds_4kBsRgNB_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"nsDnsResolver.cpp\" AND \"dnsResolver\" AND Failed\n| rex field=_raw \"(?<Gateway>gateway.*)\\sby\\s(?<DNS>.*)\" \n| eval DNS=DNS.\"_\".Gateway\n| stats count by DNS",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS failure copy 2"
		},
		"ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"Total active proxy\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*Total\\sactive\\sproxy\\sCount\\s(?<ActiveProxyCount>.*),\\sActive\\sProxy\\sList\\s*:(?<ActiveProxyList>.*)[\\s\\S]+Total\\sproxy\\sCount\\s(?<TotalProxyCount>\\d+),\\sFull\\sProxy\\sList\\s*:(?<FullProxyList>.*)\"\n| table LogTime, ActiveProxyCount, ActiveProxyList, TotalProxyCount, FullProxyList\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Final  proxy count"
		},
		"ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"proxy.cpp\" AND (\"Proxy settings: auto detect\" OR \"file url\")\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*Proxy settings:\\sauto\\sdetect\\s(?<autodetect>\\d),\\sPAC\\s(?<PAC_URL>.*),\\sstatic\\s(?<staticProxy>.*)\"\n| eval autodetect=if(autodetect=1, \"True\", \"False\")\n| table LogTime, autodetect, PAC_URL, staticProxy\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "OS Proxy setting"
		},
		"ds_Cfo912F2_ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"proxy.cpp\" AND (\"Proxies string detected\" OR \"Proxy Name\")\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*proxy\\.cpp:\\d+\\s(?<ProxyString>.*)\"\n| table LogTime, ProxyString\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Detected Proxy in the Pac"
		},
		"ds_kS2IIxNw_ds_Cfo912F2_ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 host=\"$field1$\"  source=\"*nsconfig.json\" AND NOT source=\"*prelogon_nsconfig.json\"\n| table clientConfig.externalProxy*, clientConfig.externalProxy\n| transpose",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Interoperate with proxy"
		},
		"ds_FdRRg5Qz_ds_Cfo912F2_ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"fail close\"\n| table _raw\n| sort _raw",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Fail close"
		},
		"ds_2QlqO3sX_ds_FdRRg5Qz_ds_Cfo912F2_ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"tunnel.cpp\" AND \"TLS Using proxy\"\n| rex field=_raw \"Using\\sproxy\\s(?<Msg>.*)\\sfor\"\n| table _time, Msg\n| sort -_time",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Tunnel was established via On-Prem Proxy copy 1"
		},
		"ds_YbdBjyRU_ds_HuwBRM3v_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "host=\"$field1$\" index=netskope_json1 sourcetype=nsconfig source=\"*nsconfig.json\" AND NOT source=\"*prelogon_nsconfig.json\"\n| table failClose*\n| transpose 0 column_name=\"header\":\n| fields - \"column\"",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Failclose setting - nsconfig.json"
		},
		"ds_EMv4lrO8_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"fetched ordered POPs successfully from GSLB\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*GSLB\\s(?<MSG>.*)\"\n| spath input=MSG\n| sort LogTime\n| table LogTime, egress_ip, pops{}.name, pops{}.ip",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "PoP list got from GSLB"
		},
		"ds_93ffU7nk_ds_FdRRg5Qz_ds_Cfo912F2_ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=\"nsdebuglog\"  \"Primary tunnel source IP\"\n| rex field=_raw \"source\\sIP:\\s(?<Source>.*)\\sPrimary\\stunnel\\sdest\\sIP:\\s(?<Dst>.*)\" \n| eval Source-Dst=\"Tunnel source IP: \".Source.\" Dst IP: \".Dst\n| stats values(Source-Dst) as Source-Dst",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Tunnel souce"
		},
		"ds_HNCs361n_ds_USxTAkrP_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=\"nsAppUI\" \"systemtray Service status\" OR \"===\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*\\[Internet\\sSecurity=(?<InternetSecurity>[^\\]]*)\\](?:\\s\\[Private\\sAccess=(?<PrivateAccess>[^\\]]*)\\])?(?:\\s\\[Endpoint\\sDLP=(?<EndpointDLP>[^\\]]*)\\])?\"\n| eval _time=strptime(LogTime, \"%Y/%m/%d %H:%M:%S.%3N\")\n| timechart count by InternetSecurity",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Avg RTT copy 1"
		}
	},
	"visualizations": {
		"viz_zI6AvR56": {
			"type": "splunk.column",
			"dataSources": {
				"primary": "ds_hLXoE9n0"
			},
			"title": "Timechart",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"legendDisplay": "bottom"
			}
		},
		"viz_UOKGClkL": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Connceted PoPs information",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_3vBhFKl4": {
			"type": "splunk.bar",
			"dataSources": {
				"primary": "ds_9ze5Vfw0"
			},
			"title": "GSLB RTT",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_pFWd9BS1": {
			"type": "splunk.pie",
			"dataSources": {
				"primary": "ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "Pie chart",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_sfVd5jAP": {
			"type": "splunk.column",
			"dataSources": {
				"primary": "ds_USxTAkrP_ds_9ze5Vfw0"
			},
			"title": "Avg RTT after connection",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"legendDisplay": "bottom",
				"yAxisScale": "log",
				"stackMode": "stacked"
			}
		},
		"viz_E52xk4if": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "DNS failure",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {},
			"context": {}
		},
		"viz_BlwX4Azv": {
			"type": "splunk.singlevalueicon",
			"options": {
				"showValue": false,
				"icon": "splunk-enterprise-kvstore://icon-load-balancer__4a4261a1-51e2-45aa-b89d-2911d1ceac62.svg"
			}
		},
		"viz_fZGekanA": {
			"type": "splunk.map",
			"dataSources": {
				"primary": "ds_7coO7GaE_ds_USxTAkrP_ds_9ze5Vfw0"
			},
			"title": "Connected PoP",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"center": [
					24.357274456798407,
					156.52682076274482
				],
				"zoom": 1.7916302182108037
			}
		},
		"viz_9QlENcr9": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### DNS",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_JiZsSFaL": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_HuwBRM3v_ds_hLXoE9n0"
			},
			"title": "GSLB setting",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"columnFormat": {
					"header:": {
						"width": 92
					}
				}
			}
		},
		"viz_NBXJPXYn": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "DNS resolved",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_UZlu5Deh": {
			"type": "splunk.column",
			"dataSources": {
				"primary": "ds_QkgEDkPy_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "DNS resolution",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"legendDisplay": "bottom",
				"stackMode": "stacked"
			}
		},
		"viz_eHFgYW5x": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### GSLB",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_dGqCnRKS": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### OS Proxy setting",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_iv1ANOWT": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "Final Proxy count",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"count": 100
			}
		},
		"viz_gXvdPfFZ": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "OS Proxy setting",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"count": 100
			}
		},
		"viz_0zQAuu81": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_Cfo912F2_ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "Detected in Pac",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"count": 100
			}
		},
		"viz_dAokkZaq": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_kS2IIxNw_ds_Cfo912F2_ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "Interoperate with proxy",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_qWCuosRz": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_FdRRg5Qz_ds_Cfo912F2_ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "Fail close",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"columnFormat": {
					"_time": {
						"width": 60
					}
				}
			}
		},
		"viz_c3TWX3vI": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Fail close",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_kDfOxGSM": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_2QlqO3sX_ds_FdRRg5Qz_ds_Cfo912F2_ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "Tunnel was established via On-prem Proxy",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_6VwXJ9dP": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_YbdBjyRU_ds_HuwBRM3v_ds_hLXoE9n0"
			},
			"title": "Failclose setting - nsconfig.json",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"columnFormat": {
					"header:": {
						"width": 92
					}
				}
			}
		},
		"viz_6HVb1apB": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_EMv4lrO8_ds_9ze5Vfw0"
			},
			"title": "PoP List got from GSLB",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_wG1hq5T4": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_93ffU7nk_ds_FdRRg5Qz_ds_Cfo912F2_ds_ydLKTkRP_ds_ORP4wiSl_ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "Tunnel source",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"columnFormat": {
					"_time": {
						"width": 60
					}
				}
			}
		},
		"viz_HS4YNFYX": {
			"type": "splunk.column",
			"dataSources": {
				"primary": "ds_HNCs361n_ds_USxTAkrP_ds_9ze5Vfw0"
			},
			"title": "Internet Security - System tray status",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"legendDisplay": "bottom",
				"yAxisScale": "log",
				"stackMode": "stacked"
			}
		}
	},
	"inputs": {
		"input_isTAf6kn": {
			"options": {
				"items": [],
				"token": "field1"
			},
			"title": "Select Client log",
			"type": "input.dropdown",
			"dataSources": {
				"primary": "ds_6a2VT9JD"
			}
		},
		"input_JBiR4uV0": {
			"options": {
				"defaultValue": "0,",
				"token": "tr_n9GlxAEz"
			},
			"title": "Time Range Input Title",
			"type": "input.timerange"
		}
	},
	"layout": {
		"type": "absolute",
		"options": {
			"width": 1440,
			"height": 10000
		},
		"structure": [
			{
				"item": "viz_eHFgYW5x",
				"type": "block",
				"position": {
					"x": 10,
					"y": 2660,
					"w": 1420,
					"h": 1240
				}
			},
			{
				"item": "viz_9QlENcr9",
				"type": "block",
				"position": {
					"x": 10,
					"y": 1770,
					"w": 1420,
					"h": 870
				}
			},
			{
				"item": "viz_UOKGClkL",
				"type": "block",
				"position": {
					"x": 10,
					"y": 10,
					"w": 1420,
					"h": 1750
				}
			},
			{
				"item": "viz_3vBhFKl4",
				"type": "block",
				"position": {
					"x": 20,
					"y": 3500,
					"w": 1400,
					"h": 390
				}
			},
			{
				"item": "viz_zI6AvR56",
				"type": "block",
				"position": {
					"x": 20,
					"y": 990,
					"w": 1400,
					"h": 230
				}
			},
			{
				"item": "viz_pFWd9BS1",
				"type": "block",
				"position": {
					"x": 20,
					"y": 50,
					"w": 680,
					"h": 190
				}
			},
			{
				"item": "viz_sfVd5jAP",
				"type": "block",
				"position": {
					"x": 20,
					"y": 1240,
					"w": 1400,
					"h": 230
				}
			},
			{
				"item": "viz_E52xk4if",
				"type": "block",
				"position": {
					"x": 20,
					"y": 2370,
					"w": 1400,
					"h": 260
				}
			},
			{
				"item": "viz_BlwX4Azv",
				"type": "block",
				"position": {
					"x": 310,
					"y": 10,
					"w": 70,
					"h": 20
				}
			},
			{
				"item": "viz_fZGekanA",
				"type": "block",
				"position": {
					"x": 20,
					"y": 250,
					"w": 1400,
					"h": 470
				}
			},
			{
				"item": "viz_JiZsSFaL",
				"type": "block",
				"position": {
					"x": 20,
					"y": 2710,
					"w": 1400,
					"h": 380
				}
			},
			{
				"item": "viz_NBXJPXYn",
				"type": "block",
				"position": {
					"x": 20,
					"y": 2100,
					"w": 1400,
					"h": 260
				}
			},
			{
				"item": "viz_dGqCnRKS",
				"type": "block",
				"position": {
					"x": 10,
					"y": 3910,
					"w": 1420,
					"h": 1640
				}
			},
			{
				"item": "viz_UZlu5Deh",
				"type": "block",
				"position": {
					"x": 20,
					"y": 1810,
					"w": 1400,
					"h": 280
				}
			},
			{
				"item": "viz_iv1ANOWT",
				"type": "block",
				"position": {
					"x": 20,
					"y": 3970,
					"w": 1400,
					"h": 290
				}
			},
			{
				"item": "viz_gXvdPfFZ",
				"type": "block",
				"position": {
					"x": 20,
					"y": 4290,
					"w": 1400,
					"h": 290
				}
			},
			{
				"item": "viz_0zQAuu81",
				"type": "block",
				"position": {
					"x": 20,
					"y": 4600,
					"w": 1400,
					"h": 290
				}
			},
			{
				"item": "viz_dAokkZaq",
				"type": "block",
				"position": {
					"x": 20,
					"y": 4910,
					"w": 1400,
					"h": 290
				}
			},
			{
				"item": "viz_c3TWX3vI",
				"type": "block",
				"position": {
					"x": 10,
					"y": 5571,
					"w": 1420,
					"h": 819
				}
			},
			{
				"item": "viz_qWCuosRz",
				"type": "block",
				"position": {
					"x": 20,
					"y": 5620,
					"w": 1400,
					"h": 350
				}
			},
			{
				"item": "viz_kDfOxGSM",
				"type": "block",
				"position": {
					"x": 20,
					"y": 5240,
					"w": 1400,
					"h": 290
				}
			},
			{
				"item": "viz_6VwXJ9dP",
				"type": "block",
				"position": {
					"x": 20,
					"y": 5990,
					"w": 1400,
					"h": 340
				}
			},
			{
				"item": "viz_6HVb1apB",
				"type": "block",
				"position": {
					"x": 20,
					"y": 3100,
					"w": 1400,
					"h": 390
				}
			},
			{
				"item": "viz_wG1hq5T4",
				"type": "block",
				"position": {
					"x": 20,
					"y": 1490,
					"w": 1400,
					"h": 250
				}
			},
			{
				"item": "viz_HS4YNFYX",
				"type": "block",
				"position": {
					"x": 20,
					"y": 740,
					"w": 1400,
					"h": 230
				}
			}
		],
		"globalInputs": [
			"input_isTAf6kn",
			"input_JBiR4uV0"
		]
	},
	"title": "Client conneced PoP",
	"description": "",
	"defaults": {
		"dataSources": {
			"ds.search": {
				"options": {
					"queryParameters": {
						"latest": "$global_time.latest$",
						"earliest": "$global_time.earliest$"
					}
				}
			}
		}
	}
}
    ]]></definition>
    <meta type="hiddenElements"><![CDATA[
{
	"hideEdit": false,
	"hideOpenInSearch": false,
	"hideExport": false
}
    ]]></meta>
</dashboard>