
<dashboard version="2" theme="dark">
    <label>NPA Client traffic</label>
    <description></description>
    <definition><![CDATA[
{
	"dataSources": {
		"ds_nwd5jErf": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog  \"Getting policy rule\" \n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*host\\s(?<dsthost>.*)\\sip\\s(?<hex>.*),\\sproto\\s(?<proto>.*)\\sport\\s(?<port>.*)\"\n| rex field=hex \"(?<d1>[0-9A-Fa-f]{1,2})(?<d2>[0-9A-Fa-f]{2})(?<d3>[0-9A-Fa-f]{2})(?<d4>[0-9A-Fa-f]{2})\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*(?<msg>No\\smatching.*)\"\n| eval ip_from_Hex=if(isnotnull(hex), tostring(tonumber(d4,16))+\".\"+tostring(tonumber(d3,16))+\".\"+tostring(tonumber(d2,16))+\".\"+tostring(tonumber(d1,16)), null)\n| eval dsthost=if(isnull('dsthost'), msg, dsthost)\n| table LogTime, dsthost, hex, ip_from_Hex, proto, port\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA - Access attempt search"
		},
		"ds_p8PZ4Okn": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog \"Adding\" AND \"Rule\"\n| rex field=_raw \"\\sRule\\s(?<rule>[\\s\\S]*)\"\n| rex field=rule \"Policy\\sName:\\s(?<Policy>.*)\"\n| rex field=rule \"App\\sName:\\s(?<PrivateApp>.*)\"\n| rex field=rule \"(?<Target>.*:.*:.*;)\"\n| rex field=rule \"Action:(?<Action>.*)\"\n| rex field=rule \"Publisher[s]:(?<Publisher>.*)\"\n| rex field=rule \"Use\\sPrivate\\sDNS\\:(?<Use_Private_DNS>.*)\"\n| fillnull value=null Policy, PrivateApp, Target, Action, Stitcher, Publisher, Use_Private_DNS\n| stats values(Target) as Target by Policy, PrivateApp, Publisher, Action,  Use_Private_DNS\n| sort by Policy, PrivateApp",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Rule"
		},
		"ds_7CpRsbSg": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"\n| stats earliest(_time) AS Earliest, latest(_time) AS Latest by sourcetype\n| convert timeformat=\"%Y-%m-%d %H:%M:%S\" ctime(Earliest) ctime(Latest)",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "Log_timestamps"
		},
		"ds_6a2VT9JD": {
			"type": "ds.search",
			"options": {
				"query": "| tstats values(host) as hosts where index=netskope_client1 by host\n| table hosts\n| sort -hosts",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Select Client log"
		},
		"ds_7Y9oH6d8_ds_p8PZ4Okn": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 host=\"$field1$\" source=\"*nssteering.json\" source=\"*nssteering.json\"\n| rename steering_config_name as \"001. steering_config_name\", private_* as \"002. private_*\"\n| table 00*, source\n| transpose",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "steering config NPA"
		},
		"ds_JmylvZNC_ds_nwd5jErf": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog \"Added protocols\"\n| rex field=_raw \"Added\\sprotocols\\s(?<AddedProtocols>.*)\"\n| stats values(AddedProtocols) as AddedProtocols",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Private app - IP based entries"
		},
		"ds_WppUorFU_ds_nwd5jErf": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog \"No matching rule\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*0x[0-9|a-f]+\\s(?<desthost>.*)\"\n| table LogTime, desthost\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "NPA No matching rule found"
		},
		"ds_Abg4QXZG_ds_p8PZ4Okn": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog \"search \"\n| rex field=_raw \"\\sList:\\s(?<SearchList>.*)\" \n| stats values(SearchList) as SearchList",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS suffixes"
		},
		"ds_C1zIDoOL_ds_WppUorFU_ds_nwd5jErf": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog \"SRP live status is\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*status\\sis(?<SrpLiveStatus>.*).\" \n| table LogTime, SrpLiveStatus\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "SRP Live Status"
		},
		"ds_5DWXDjdo_ds_C1zIDoOL_ds_WppUorFU_ds_nwd5jErf": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog \"SRP version\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*SRP\\sversion\\s(?<SrpVersion>.*)\\sbuilt\\sin\\s(?<ms>.*)\\sms,\\s(?<SrpBytes>.*)\\sbytes,\\stenant\\s(?<Tenant>.*),\\suser\\s(?<NpaUser>.*),\\s#HostRules\\s(?<HostRules>.*)\\s#DomainRules\\s(?<DomainRules>.*)\\s#SubnetRules\\s(?<SubnetRules>.*).\"\n| fillnull value=null SrpVersion, ms, SrpBytes, Tenant, NpaUser, HostRules, DomainRules, SubnetRules\n| table LogTime, SrpVersion, ms, SrpBytes, Tenant, NpaUser, HostRules, DomainRules, SubnetRules\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "SRP Statistics"
		},
		"ds_uBDRtQLr_ds_5DWXDjdo_ds_C1zIDoOL_ds_WppUorFU_ds_nwd5jErf": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=npadebuglog \"Got custom device classification\"\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*classification\\sstatus\\s(?<MSG>.*)\"\n| table LogTime, MSG",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Device classification status"
		}
	},
	"visualizations": {
		"viz_WHKIZd1n": {
			"type": "splunk.table",
			"options": {
				"columnFormat": {
					"ip_from_Hex": {
						"width": 96
					},
					"dsthost": {
						"width": 124
					},
					"LogTime": {
						"width": 122
					}
				},
				"count": 4000
			},
			"dataSources": {
				"primary": "ds_nwd5jErf"
			},
			"title": "NPA - Access attempt",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_mXPqgh8E": {
			"type": "splunk.table",
			"options": {
				"count": 500,
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false,
				"columnFormat": {
					"Policy": {
						"width": 306
					},
					"Publisher": {
						"width": 175
					},
					"Action": {
						"width": 97
					},
					"Use_Private_DNS": {
						"width": 145
					},
					"Target": {
						"width": 719
					},
					"PrivateApp": {
						"width": 232
					}
				}
			},
			"dataSources": {
				"primary": "ds_p8PZ4Okn"
			},
			"title": "Rule"
		},
		"viz_1t72eCH3": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Steering config & Rule",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_xIGHmaG5": {
			"type": "splunk.table",
			"options": {
				"count": 100,
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false,
				"columnFormat": {
					"Policy": {
						"width": 95
					},
					"Publisher": {
						"width": 72
					},
					"Action": {
						"width": 60
					},
					"Use_Private_DNS": {
						"width": 60
					},
					"Target": {
						"width": 208
					}
				}
			},
			"dataSources": {
				"primary": "ds_7Y9oH6d8_ds_p8PZ4Okn"
			},
			"title": "Rule"
		},
		"viz_cKPZKfUE": {
			"type": "splunk.table",
			"options": {
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false,
				"count": 1000
			},
			"dataSources": {
				"primary": "ds_JmylvZNC_ds_nwd5jErf"
			},
			"title": "Private app - IP entries"
		},
		"viz_631cKUmZ": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Traffic",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_LYHJ0Uto": {
			"type": "splunk.table",
			"options": {
				"columnFormat": {
					"ip_from_Hex": {
						"width": 96
					},
					"dsthost": {
						"width": 96
					},
					"LogTime": {
						"width": 60
					}
				},
				"count": 3000
			},
			"dataSources": {
				"primary": "ds_WppUorFU_ds_nwd5jErf"
			},
			"title": "No matching rule found host",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_MPkFhAIS": {
			"type": "splunk.table",
			"options": {
				"count": 500,
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false,
				"columnFormat": {
					"Policy": {
						"width": 87
					},
					"Publisher": {
						"width": 72
					},
					"Action": {
						"width": 60
					},
					"Use_Private_DNS": {
						"width": 60
					},
					"Target": {
						"width": 208
					}
				}
			},
			"dataSources": {
				"primary": "ds_Abg4QXZG_ds_p8PZ4Okn"
			},
			"title": "DNS suffix"
		},
		"viz_4kI9guMs": {
			"type": "splunk.table",
			"options": {
				"columnFormat": {
					"ip_from_Hex": {
						"width": 96
					},
					"dsthost": {
						"width": 96
					},
					"LogTime": {
						"width": 60
					}
				},
				"count": 3000
			},
			"dataSources": {
				"primary": "ds_C1zIDoOL_ds_WppUorFU_ds_nwd5jErf"
			},
			"title": "SRP Live Status",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_2epg8X4p": {
			"type": "splunk.table",
			"options": {
				"columnFormat": {
					"ip_from_Hex": {
						"width": 96
					},
					"dsthost": {
						"width": 96
					},
					"LogTime": {
						"width": 150
					},
					"NpaUser": {
						"width": 200
					},
					"ms": {
						"width": 62
					},
					"SubnetRules": {
						"width": 109
					},
					"Tenant": {
						"width": 106
					},
					"SrpBytes": {
						"width": 110
					}
				},
				"count": 3000
			},
			"dataSources": {
				"primary": "ds_5DWXDjdo_ds_C1zIDoOL_ds_WppUorFU_ds_nwd5jErf"
			},
			"title": "SRP Statistics",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_T01KZQau": {
			"type": "splunk.table",
			"options": {
				"columnFormat": {
					"ip_from_Hex": {
						"width": 96
					},
					"dsthost": {
						"width": 96
					},
					"LogTime": {
						"width": 165
					},
					"NpaUser": {
						"width": 133
					},
					"ms": {
						"width": 62
					}
				},
				"count": 3000
			},
			"dataSources": {
				"primary": "ds_uBDRtQLr_ds_5DWXDjdo_ds_C1zIDoOL_ds_WppUorFU_ds_nwd5jErf"
			},
			"title": "Device Classification status",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_wYDKu5vI": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### SRP statistics",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		}
	},
	"inputs": {
		"input_isTAf6kn": {
			"options": {
				"items": [],
				"token": "field1"
			},
			"title": "Select Client log",
			"type": "input.dropdown",
			"dataSources": {
				"primary": "ds_6a2VT9JD"
			}
		},
		"input_JBiR4uV0": {
			"options": {
				"defaultValue": "0,",
				"token": "tr_n9GlxAEz"
			},
			"title": "Time Range Input Title",
			"type": "input.timerange"
		}
	},
	"layout": {
		"type": "absolute",
		"options": {
			"width": 1440,
			"height": 10000
		},
		"structure": [
			{
				"item": "viz_wYDKu5vI",
				"type": "block",
				"position": {
					"x": 10,
					"y": 3510,
					"w": 1420,
					"h": 1570
				}
			},
			{
				"item": "viz_631cKUmZ",
				"type": "block",
				"position": {
					"x": 10,
					"y": 2020,
					"w": 1420,
					"h": 1470
				}
			},
			{
				"item": "viz_1t72eCH3",
				"type": "block",
				"position": {
					"x": 10,
					"y": 10,
					"w": 1420,
					"h": 1990
				}
			},
			{
				"item": "viz_mXPqgh8E",
				"type": "block",
				"position": {
					"x": 20,
					"y": 630,
					"w": 1400,
					"h": 690
				}
			},
			{
				"item": "viz_WHKIZd1n",
				"type": "block",
				"position": {
					"x": 20,
					"y": 2070,
					"w": 1400,
					"h": 680
				}
			},
			{
				"item": "viz_xIGHmaG5",
				"type": "block",
				"position": {
					"x": 20,
					"y": 50,
					"w": 1400,
					"h": 420
				}
			},
			{
				"item": "viz_cKPZKfUE",
				"type": "block",
				"position": {
					"x": 20,
					"y": 1350,
					"w": 1400,
					"h": 640
				}
			},
			{
				"item": "viz_LYHJ0Uto",
				"type": "block",
				"position": {
					"x": 20,
					"y": 2760,
					"w": 1400,
					"h": 680
				}
			},
			{
				"item": "viz_MPkFhAIS",
				"type": "block",
				"position": {
					"x": 20,
					"y": 480,
					"w": 1400,
					"h": 140
				}
			},
			{
				"item": "viz_4kI9guMs",
				"type": "block",
				"position": {
					"x": 20,
					"y": 3550,
					"w": 550,
					"h": 410
				}
			},
			{
				"item": "viz_2epg8X4p",
				"type": "block",
				"position": {
					"x": 20,
					"y": 3980,
					"w": 1400,
					"h": 530
				}
			},
			{
				"item": "viz_T01KZQau",
				"type": "block",
				"position": {
					"x": 20,
					"y": 4520,
					"w": 1400,
					"h": 530
				}
			}
		],
		"globalInputs": [
			"input_isTAf6kn",
			"input_JBiR4uV0"
		]
	},
	"title": "NPA Client traffic",
	"description": "",
	"defaults": {
		"dataSources": {
			"ds.search": {
				"options": {
					"queryParameters": {
						"latest": "$global_time.latest$",
						"earliest": "$global_time.earliest$"
					}
				}
			}
		}
	}
}
    ]]></definition>
    <meta type="hiddenElements"><![CDATA[
{
	"hideEdit": false,
	"hideOpenInSearch": false,
	"hideExport": false
}
    ]]></meta>
</dashboard>