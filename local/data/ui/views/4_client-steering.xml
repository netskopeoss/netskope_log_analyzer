
<dashboard version="2" theme="dark">
    <label>Client Steering</label>
    <description></description>
    <definition><![CDATA[
{
	"dataSources": {
		"ds_lMaikGeN": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 host=\"$field1$\" sourcetype=nsconfig source=\"*nsexception.json\"\n| table ips*",
				"queryParameters": {
					"earliest": "0",
					"latest": "now"
				}
			},
			"name": "nsexception.json - ips search"
		},
		"ds_hQ3DTGtU": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=\"nsdebuglog\" \"Bypassing\" AND \"tunneling\"  \n\nearliest=[ search index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog | stats min(_time) as earliest_time | return $earliest_time ]  \nlatest=[ search index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog | stats max(_time) as latest_time | return $latest_time ]\n\n| rex field=_raw \"process:\\s*(?<Process>.*?)(?=(\\sfor|\\sto|,))\"\n| timechart count by Process useother=false",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Tunnel bypassed traffic"
		},
		"ds_IBqh7Cpp": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog  \"connected to remote host\" OR \"443 successfully\"\n| rex field=_raw \"(?<clientip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\)?+:\"\n| iplocation clientip | geostats latfield=lat longfield=lon count by clientip",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Cluster map search"
		},
		"ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"Tunnel established to gateway\"\n| rex field=_raw \"gateway:\\s(?<gateway>.*),\\spop:\\s(?<pop>.*),\\sassigned\\sip:\\s(?<gatewayip>.*),\\sCFW\\sstatus:\\s(?<CFWStatus>.*)\"\n| timechart count by pop",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Connected PoPs - Timechart"
		},
		"ds_z0jEHn3e": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 sourcetype=nsconfig host=\"$field1$\" source=\"*nsconfig.json\"\n| rename clientConfig.configurationName as 001.clientConfig.configurationName\n| eval 002.cache.lastClientUpdatedTimestamp=strftime('cache.lastClientUpdatedTimestamp', \"%Y/%m/%d %H:%M:%S\")\n| eval 003.cache.configUpdateTimestamp=strftime('cache.configUpdateTimestamp', \"%Y/%m/%d %H:%M:%S\")\n| rename \nclientConfig.clientUpdate* as 004.clientConfig.clientUpdate*,\nclientConfig.clientUpdate.useScheduledUpgrade* as 005.clientConfig.clientUpdate.useScheduledUpgrade*\n| table 00*\n| transpose 0 column_name=\"header\":\n| fields - \"column\"",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "nsconfig.json - update settings"
		},
		"ds_3BW1BQjy": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\"  \"clientStatusHandler client status message: \"\n| head 1\n| rex field=_raw \"clientStatusHandler\\sclient\\sstatus\\smessage:\\s(?<client_status>.*)\"\n| spath input=client_status\n| rename \nclient_status.host_info.device_make as \"01. Device Maker\", \nclient_status.host_info.device_model as \"02. Device Model\",\nclient_status.host_info.os as \"03. Host OS\",\nclient_status.host_info.os_version as \"04. Host OS version\",\nclient_status.host_info.hostname as \"05. Host name\",\nclient_status.host_info.macAddresses{} as \"06. Host MAC address\",\nclient_status.host_info.serialNumber as \"07. Host serial number\"\nclient_status.host_info.nsdeviceuid as \"08. Host nsdebviceuid\",\nclient_status.host_info.old_nsdeviceuid as \"09. old_nsdeviceuid0\",\n| eval \"10. Last update time\"=strftime('client_status.host_info.last_hostinfo_update_timestamp', \"%Y/%d/%m %H:%M:%S\")\n| table 0*, 1*\n| transpose\n",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Client Status Handler"
		},
		"ds_7CpRsbSg": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"\n| stats earliest(_time) AS Earliest, latest(_time) AS Latest by sourcetype\n| convert timeformat=\"%Y-%m-%d %H:%M:%S\" ctime(Earliest) ctime(Latest)",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "Log_timestamps"
		},
		"ds_6a2VT9JD": {
			"type": "ds.search",
			"options": {
				"query": "| tstats values(host) as hosts where index=netskope_client1 by host\n| table hosts\n| sort -hosts",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Select Client log"
		},
		"ds_MRGQyb8i": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\" \"clientStatusHandler client status message: \"\n| rex field=_raw \"clientStatusHandler\\sclient\\sstatus\\smessage:\\s(?<client_status>.*)\"\n| spath input=client_status\n| rename client_status.client_version as version\n| stats count by version",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Client Version"
		},
		"ds_vKQzwM2y_ds_MRGQyb8i": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\" \"Tunnel established to gateway\"\n| rex field=_raw \"pop:\\s(?<pop>.*),\\sassigned\"\n| table _raw, pop\n| stats count by pop",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Connected PoPs"
		},
		"ds_mISQGdBb_ds_vKQzwM2y_ds_MRGQyb8i": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\" \"SteeringConfig Steering Config name:\"\n| rex field=_raw \"name:\\s(?<SteeringConf>.*)\\sTraffic\\sMode:\\s(?<TrafficMode>.*)\\sDynamic\\ssteering\\s(?<DynamicSteering>\\d)\"\n| eval DynamicSteering=if(DynamicSteering == \"1\", \"true\", \"false\")\n| stats count by SteeringConf",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Steering Configration"
		},
		"ds_lmo8JfHa": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=STAUpdate \"Verbose logging\" OR \"Running installation\" OR \": Windows \" \n| sort _time \n| table  _raw\n",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "STAUpdate"
		},
		"ds_mJF3HiBv_ds_lmo8JfHa": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" (sourcetype=nsdebuglog OR sourcetype=stagentUI) \"Config new client version\" OR \"Config download path for client update\" OR \"Config trying to download\" OR \"client auto update\" OR \"starting =\"\n| table _raw\n| sort _raw",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Update history"
		},
		"ds_4qbss7jP": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\" \"clientStatusHandler client status message: \"\n| sort -_raw\n| rex field=_raw \"clientStatusHandler\\sclient\\sstatus\\smessage:\\s(?<client_status>.*)\"\n| spath input=client_status\n| rename client_status.client_version as version\n| table _time, version\n| dedup consecutive=true version\n| sort _time",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Client version table"
		},
		"ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"  sourcetype=nsdebuglog \"post client rtt\" \n| rex field=_raw \"\\[(?<Client>.*)\\]:\\spost\\sclient\\srtt\\spop\\:(?<PoP>.*)\\sip\\:(?<GatewayIP>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\srtt:(?<RTT>\\d+)\"\n| eval Dst=Client.\"_\".PoP.\"_\".GatewayIP\n| stats avg(RTT) as AvgRTT by Dst\n| eval AvgRTT=round(AvgRTT, 2)\n| sort AvgRTT, Dst",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "GSLB RTT"
		},
		"ds_82A9aQrp_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"Tunnel established to gateway\" OR \"Proxy health\"\n| sort _raw\n| rex field=_raw \"(?<Time>^\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*nsTunnel\\s(?<MSG>.*)\"\n| rex field=MSG \"CFW\\sstatus:\\s(?<CFWStatus>.*)\"\n| table Time, MSG,",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Timeline"
		},
		"ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"SteeringConfig Steering Config name:\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*name:\\s(?<SteeringConf>.*)\\sTraffic\\sMode:\\s(?<TrafficMode>.*)\\sDynamic\\ssteering\\s(?<DynamicSteering>\\d)\"\n| sort _raw\n| eval DynamicSteering=if(DynamicSteering==1, \"true\", \"false\")\n| table LogTime, SteeringConf, TrafficMode, DynamicSteering",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Traffic mode"
		},
		"ds_USxTAkrP_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 host=\"$field1$\" sourcetype=nsconfig source=\"*nsconfig.json\" AND NOT source=\"*prelogon_nsconfig.json\" \n| rename clientConfig.priority as 001.clientConfig.priority\n| rename clientConfig.configurationName* as 002.clientConfig.configurationName*\n| rename clientConfig.dynamicSteering as 003.clientConfig.dynamicSteering\n| rename onpremcheck* as 004.onpremcheck*\n| table 00*\n| transpose",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Dynamic steering"
		},
		"ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"nsDnsResolver.cpp\" AND \"dnsResolver\" AND Failed\n| rex field=_raw \"(?<Gateway>gateway.*)\\sby\\s(?<DNS>.*)\" \n| eval DNS=DNS.\"_\".Gateway\n| stats count by DNS\n| sort -count",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS failure"
		},
		"ds_7coO7GaE_ds_USxTAkrP_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog   \"Connected to\" AND \"Successfully\"\n| rex field=_raw \"(?<GatewayIP>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\"\n| iplocation GatewayIP \n| geostats latfield=lat longfield=lon count by GatewayIP",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "GatewayIP - Map"
		},
		"ds_HuwBRM3v_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "host=\"$field1$\" index=netskope_json1 sourcetype=nsconfig source=\"*nsconfig.json\" AND NOT source=\"*prelogon_nsconfig.json\"\n| rename \ngslb.host as \"001. gslb.host\",\ngslb.port as \"002. gslb.port\",\nnpa.gslb.port as \"003. gslb.port\",\nnpa.gslb.port as \"004. gslb.port\",\nnpa_gslb_client* as \"005. npa_gslb_client*\"\n| table 0*\n| transpose 0 column_name=\"header\":\n| fields - \"column\"",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "GSLB setting"
		},
		"ds_YSgjGLGw_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"nsDnsResolver.cpp\" AND \"dnsResolver\" AND NOT Failed\n| rex field=_raw \"(?<Gateway>gateway.*)\\sby\\s(?<DNS>.*)\" \n| eval DNS=DNS.\"_\".Gateway\n| stats count by DNS\n| sort -count",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS resolved"
		},
		"ds_QkgEDkPy_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"\nsourcetype=nsdebuglog \"nsDnsResolver.cpp\" AND \"dnsResolver\" AND \"*DNS\"\n| rex field=_raw \"(?<Gateway>gateway.*)\\sby\\s(?<DNS>.*)\" \n| eval MSG=DNS.\"_\".Gateway\n| timechart usenull=false count by MSG",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS timechart"
		},
		"ds_4kBsRgNB_ds_mzmNhkaL_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"nsDnsResolver.cpp\" AND \"dnsResolver\" AND Failed\n| rex field=_raw \"(?<Gateway>gateway.*)\\sby\\s(?<DNS>.*)\" \n| eval DNS=DNS.\"_\".Gateway\n| stats count by DNS",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DNS failure copy 2"
		},
		"ds_gDs4JGJI_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"SteeringConfig Steering Config name:\"\n| rex field=_raw \"name:\\s(?<SteeringConf>.*)\\sTraffic\\sMode:\\s(?<TrafficMode>.*)\\sDynamic\\ssteering\\s(?<DynamicSteering>\\d)\"\n| eval DynamicSteering=if(DynamicSteering == \"1\", \"true\", \"false\")\n| eval msg=\"Steering Config name: \".SteeringConf.\", Traffic mode: \".TrafficMode.\", DynamicSteering: \".DynamicSteering\n| stats count by msg",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Traffic mode stats"
		},
		"ds_nmxlyfXa_ds_USxTAkrP_ds_9ze5Vfw0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 host=\"$field1$\" sourcetype=nsconfig source=\"*nssteering.json\"\n| eval 003_dynamic_steering_result = case(dynamic_steering == \"0\", \"disabled\", dynamic_steering == \"1\", \"enabled\", true(), \"Other\")\n| rename steering_config_name as 001_steering_config_name\n| rename traffic_mode as 002_traffic_mode\n| rename domain_* as tmp_domain_*\n| rename domain* as 003_domain* \n| rename dynamic_steering as 005_dynamic_steering\n| rename firewall_traffic_mode as 006_firewall_traffic_mode\n| rename onprem_steering_method as 007_onprem_steering_method\n| rename offprem_steering_method as 008_offprem_steering_method\n| rename private_apps_* as 009_private_apps_*\n| eval 004_Non_standard_port=mvzip('tmp_domain_ports{}.domains{}', 'tmp_domain_ports{}.ports{}', \" : \")\n| table 00*\n| transpose",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "nssteering.json"
		},
		"ds_Isl1L7Js_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"SteeringConfig Steering Config name:\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*name:\\s(?<SteeringConf>.*)\\sTraffic\\sMode:\\s(?<TrafficMode>.*)\\sDynamic\\ssteering\\s(?<DynamicSteering>\\d)\"\n| sort _raw\n| eval DynamicSteering=if(DynamicSteering==1, \"true\", \"false\")\n| table LogTime, SteeringConf, TrafficMode, DynamicSteering",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Traffic mode copy 1"
		},
		"ds_fbl4J36O_ds_Isl1L7Js_ds_v57DBEEj_ds_hLXoE9n0": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=\"nsdebuglog\" \"detectClientLocation\" \n| rex field=_raw \"(?<MSG>Location:\\s.*)\"\n| timechart  count by MSG\n| appendcols [ search index=netskope_client1 host=\"$field1$\" sourcetype=\"nsdebuglog\" \"BypassAppMgr Bypassing connection by tunneling from process\"\n| rex field=_raw \"BypassAppMgr\\s(?<MSG1>.*process)\"\n| timechart count by MSG1 ]",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "detectClientLocation"
		},
		"ds_nyIc4PX7_ds_hQ3DTGtU": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" \"location detected\" OR \"NPA just received\" OR \"Client location is\" OR \"On-prem detection using\"\r\n| rex field=_raw \"(?<LogTime>\\d{4}[-|\\/]\\d{2}[-|\\/]\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3})\\s(?<MSG>.*)\"\r\n| eval LogTime = replace(LogTime, \"-\", \"/\")\r\n| table LogTime, MSG\r\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Onprem check log"
		},
		"ds_bItYdblF_ds_nyIc4PX7_ds_hQ3DTGtU": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog  \"dynamic steering enhancement:\" AND \"SteeringTrafficeMode\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*SteeringTrafficeMode:\\s(?<SteeringTrafficeMode>\\d),\\sonPremDynamicSteeringTrafficeMode:\\s(?<onPrem>\\d),\\soffPremDynamicSteeringTrafficeMode:\\s(?<offPrem>\\d),\\sonPremBypassOption:(?<onPremBypass>\\d),\\soffPremBypassOption:(?<offPremBypass>\\d),\\s\\sbypassOption=(?<bypassOption>\\d)\"\n| table LogTime, SteeringTrafficeMode, onPrem, offPrem, onPremBypass, offPremBypass, bypassOption\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Steering enhancement"
		},
		"ds_tFQJ5Y1y_ds_nyIc4PX7_ds_hQ3DTGtU": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"Tunneling flow from\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*process:\\s(?<Process>.*)\\sto\\s(?<HostIP>host:\\s.*)\"\n| stats values(HostIP) as HostIP count by Process\n| sort -count",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Tunneling flow from"
		},
		"ds_ttnOtVXy_ds_lMaikGeN": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 host=\"$field1$\" sourcetype=nsconfig source=\"*nsexception.json\"\n| table names*",
				"queryParameters": {
					"earliest": "0",
					"latest": "now"
				}
			},
			"name": "nsexception.json - names"
		},
		"ds_qzgOgbKS_ds_ttnOtVXy_ds_lMaikGeN": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 host=\"$field1$\" sourcetype=nsconfig source=\"*nsexception.json\"\n| table fail_close*",
				"queryParameters": {
					"earliest": "0",
					"latest": "now"
				}
			},
			"name": "nsexception.json - failclose"
		},
		"ds_zgpmfW8y_ds_qzgOgbKS_ds_ttnOtVXy_ds_lMaikGeN": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 host=\"$field1$\" sourcetype=nsconfig source=\"*nsexception.json\"\n| table steering_config_name*",
				"queryParameters": {
					"earliest": "0",
					"latest": "now"
				}
			},
			"name": "nsexception.json - failclose copy 1"
		},
		"ds_bPzLCYSQ_ds_tFQJ5Y1y_ds_nyIc4PX7_ds_hQ3DTGtU": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"BypassAppMgr bypassing flow to\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*(?<dhost>host:.*),\\sprocess:\\s(?<Process>.*),\\s(?<IP>Dest\\sIP.*)\"\n| eval Dst=dhost.\" \".IP\n| stats values(Dst) as Dst count by Process\n| sort -count",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "BypassAppMgr bypassing flow to"
		},
		"ds_cNHGvMXk_ds_tFQJ5Y1y_ds_nyIc4PX7_ds_hQ3DTGtU": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"Tunneling flow from\" AND app-fw\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*process:\\s(?<Process>.*)\\sto\\s(?<HostIP>host:\\s.*)\"\n| stats values(HostIP) as HostIP count by Process\n| sort -count",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Tunneling flow from cfw"
		},
		"ds_k9DPYgqN_ds_bPzLCYSQ_ds_tFQJ5Y1y_ds_nyIc4PX7_ds_hQ3DTGtU": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog  \"Bypassing flow from\"\n| rex field=_raw \"from\\sprocess:\\s(?<MSG>.*)\"\n| stats values(MSG) as MSG\n| sort -count",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "CProxyMgr Bypassing flow from"
		},
		"ds_0fqPTVC5_ds_tFQJ5Y1y_ds_nyIc4PX7_ds_hQ3DTGtU": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog \"process:\"\n| rex field=_raw \"process:\\s*(?<Process>.*?)(?=(\\sfor|\\sto|,))\"\n| stats values(Process) as Process ",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Internet Security Detected Process"
		},
		"ds_0JMlGVfQ_ds_ttnOtVXy_ds_lMaikGeN": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 host=\"$field1$\" sourcetype=nsconfig source=\"*nsbypass.json\"\n| spath input=_raw path=certPinnedAppList{} output=certPinnedAppList\n| mvexpand certPinnedAppList\n| spath input=certPinnedAppList\n| table appName, app_domains{}, mode, processName, rowID, tunnel_domains{}",
				"queryParameters": {
					"earliest": "0",
					"latest": "now"
				}
			},
			"name": "nsbypass - process"
		},
		"ds_Cspa5X5s_ds_nyIc4PX7_ds_hQ3DTGtU": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsdebuglog  \"location is\"\n| rex field=_raw \"(?<LogTime>\\d{4}\\/\\d{2}\\/\\d{2}\\s\\d{2}:\\d{2}:\\d{2}.\\d{3}).*location\\sis\\s(?<Location>.*)\\sand\\straffic\\smode\\sis\\s(?<TrafficMode>.*),\\sDNS\\s(?<DNS>.*)\"\n| eval TrafficMode = case(\n    TrafficMode == 0, \"0 ‘CloudAppOnly mode for On-Prem and ‘web’/'all' mode for Off-Prem. if firewall_traffic_mode is ‘all’, ‘all’ mode is used for Off-Prem. if firewall_traffic_mode is not ‘all’, ‘web’ mode is used for Off-Prem;\",\n    TrafficMode == 1, \"1 CloudAppOnly\",\n    TrafficMode == 2, \"2 All Web\",\n    TrafficMode== 3, \"3 All traffic\",\n    true(), \"NA\"\n)\n| table LogTime,Location, TrafficMode, DNS\n| sort LogTime",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "DynamicSteering1"
		}
	},
	"visualizations": {
		"viz_yEPX18Iq": {
			"type": "splunk.table",
			"options": {
				"count": 100,
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false
			},
			"dataSources": {
				"primary": "ds_lMaikGeN"
			},
			"title": "nsexception.json - ips"
		},
		"viz_BQPdbt1a": {
			"type": "splunk.column",
			"options": {
				"stackMode": "stacked",
				"legendDisplay": "bottom"
			},
			"dataSources": {
				"primary": "ds_hQ3DTGtU"
			},
			"title": "Ttunnel bypassed traffic",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_UOKGClkL": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Traffic mode history",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_pFWd9BS1": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "Traffic mode history",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"count": 200
			},
			"description": "This information might not be accurate if Dynamic Steering is enabled."
		},
		"viz_sfVd5jAP": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_USxTAkrP_ds_9ze5Vfw0"
			},
			"title": "nsconfig.json - Dynamic steering",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {},
			"context": {}
		},
		"viz_BlwX4Azv": {
			"type": "splunk.singlevalueicon",
			"options": {
				"showValue": false,
				"icon": "splunk-enterprise-kvstore://icon-load-balancer__4a4261a1-51e2-45aa-b89d-2911d1ceac62.svg"
			}
		},
		"viz_KGE0Wd6E": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_gDs4JGJI_ds_v57DBEEj_ds_hLXoE9n0"
			},
			"title": "Traffic mode count",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"count": 5
			},
			"description": "This information might not be accurate if Dynamic Steering is enabled."
		},
		"viz_MuePvtqM": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Onprem check & Dynamic steering",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_Oh40dntk": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_nmxlyfXa_ds_USxTAkrP_ds_9ze5Vfw0"
			},
			"title": "nssteering.json",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"count": 30
			}
		},
		"viz_iAnquG5k": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_nyIc4PX7_ds_hQ3DTGtU"
			},
			"title": "Onprem check log",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"columnFormat": {
					"LogTime": {
						"width": 60
					}
				},
				"count": 2000
			}
		},
		"viz_kWeWWmHq": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_bItYdblF_ds_nyIc4PX7_ds_hQ3DTGtU"
			},
			"title": "Steering enhancement",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"columnFormat": {
					"LogTime": {
						"width": 60
					}
				},
				"count": 100
			}
		},
		"viz_muYPdt8O": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_tFQJ5Y1y_ds_nyIc4PX7_ds_hQ3DTGtU"
			},
			"title": "Tunneling flow",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"count": 100,
				"columnFormat": {
					"LogTime": {
						"width": 60
					},
					"Process": {
						"width": 109
					},
					"HostIP": {
						"width": 340
					}
				}
			}
		},
		"viz_5IOi3LhA": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Tunneling flow from",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_l671BH1P": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### nsexception.json",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_0ffUgM5f": {
			"type": "splunk.table",
			"options": {
				"count": 100,
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false
			},
			"dataSources": {
				"primary": "ds_ttnOtVXy_ds_lMaikGeN"
			},
			"title": "nsexception.json - names"
		},
		"viz_ycEBatHj": {
			"type": "splunk.table",
			"options": {
				"count": 100,
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false
			},
			"dataSources": {
				"primary": "ds_qzgOgbKS_ds_ttnOtVXy_ds_lMaikGeN"
			},
			"title": "nsexception.json - failclose"
		},
		"viz_TsyE54jL": {
			"type": "splunk.table",
			"options": {
				"count": 100,
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false
			},
			"dataSources": {
				"primary": "ds_zgpmfW8y_ds_qzgOgbKS_ds_ttnOtVXy_ds_lMaikGeN"
			},
			"title": "nsexception.json - steering_config_name"
		},
		"viz_NkE8fLjz": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_bPzLCYSQ_ds_tFQJ5Y1y_ds_nyIc4PX7_ds_hQ3DTGtU"
			},
			"title": "BypassAppMgr bypassing flow to exception host",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"count": 100,
				"columnFormat": {
					"LogTime": {
						"width": 60
					},
					"Process": {
						"width": 60
					},
					"HostIP": {
						"width": 340
					},
					"Dst": {
						"width": 117
					}
				}
			}
		},
		"viz_BUBlHZYS": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_cNHGvMXk_ds_tFQJ5Y1y_ds_nyIc4PX7_ds_hQ3DTGtU"
			},
			"title": "Tunneling flow cfw",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"count": 100,
				"columnFormat": {
					"LogTime": {
						"width": 60
					},
					"Process": {
						"width": 109
					},
					"HostIP": {
						"width": 340
					}
				}
			}
		},
		"viz_YVs9Ss6o": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_k9DPYgqN_ds_bPzLCYSQ_ds_tFQJ5Y1y_ds_nyIc4PX7_ds_hQ3DTGtU"
			},
			"title": "Bypassing flow from",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"count": 100,
				"columnFormat": {
					"LogTime": {
						"width": 60
					},
					"Process": {
						"width": 60
					},
					"HostIP": {
						"width": 340
					},
					"Dst": {
						"width": 117
					}
				}
			}
		},
		"viz_8gzB64Hy": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_0fqPTVC5_ds_tFQJ5Y1y_ds_nyIc4PX7_ds_hQ3DTGtU"
			},
			"title": "All Internet Seicurity detected process (Tunnel and bypass)",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_qDf3tilf": {
			"type": "splunk.table",
			"options": {
				"count": 200,
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false
			},
			"dataSources": {
				"primary": "ds_0JMlGVfQ_ds_ttnOtVXy_ds_lMaikGeN"
			},
			"title": "nsbypass.json"
		},
		"viz_KS16VEVz": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### nsbypass.json",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_JYWklRZN": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### nsbypassed traffic",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_Jj2IOc2j": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_Cspa5X5s_ds_nyIc4PX7_ds_hQ3DTGtU"
			},
			"title": "Onprem check log",
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false,
			"options": {
				"columnFormat": {
					"LogTime": {
						"width": 60
					}
				},
				"count": 1000
			}
		}
	},
	"inputs": {
		"input_JBiR4uV0": {
			"options": {
				"defaultValue": "0,",
				"token": "tr_n9GlxAEz"
			},
			"title": "Time Range Input Title",
			"type": "input.timerange"
		},
		"input_rl8cqGDh": {
			"options": {
				"items": [],
				"token": "field1"
			},
			"title": "Select Client log",
			"type": "input.dropdown",
			"dataSources": {
				"primary": "ds_6a2VT9JD"
			}
		}
	},
	"layout": {
		"type": "absolute",
		"options": {
			"width": 1440,
			"height": 9000
		},
		"structure": [
			{
				"item": "viz_JYWklRZN",
				"type": "block",
				"position": {
					"x": 10,
					"y": 6310,
					"w": 1420,
					"h": 970
				}
			},
			{
				"item": "viz_KS16VEVz",
				"type": "block",
				"position": {
					"x": 10,
					"y": 5450,
					"w": 1420,
					"h": 850
				}
			},
			{
				"item": "viz_UOKGClkL",
				"type": "block",
				"position": {
					"x": 10,
					"y": 10,
					"w": 1420,
					"h": 1700
				}
			},
			{
				"item": "viz_pFWd9BS1",
				"type": "block",
				"position": {
					"x": 20,
					"y": 960,
					"w": 1400,
					"h": 330
				}
			},
			{
				"item": "viz_BlwX4Azv",
				"type": "block",
				"position": {
					"x": 230,
					"y": 10,
					"w": 50,
					"h": 30
				}
			},
			{
				"item": "viz_MuePvtqM",
				"type": "block",
				"position": {
					"x": 10,
					"y": 1720,
					"w": 1420,
					"h": 1760
				}
			},
			{
				"item": "viz_KGE0Wd6E",
				"type": "block",
				"position": {
					"x": 20,
					"y": 720,
					"w": 1400,
					"h": 230
				}
			},
			{
				"item": "viz_sfVd5jAP",
				"type": "block",
				"position": {
					"x": 20,
					"y": 1760,
					"w": 1400,
					"h": 410
				}
			},
			{
				"item": "viz_Oh40dntk",
				"type": "block",
				"position": {
					"x": 20,
					"y": 50,
					"w": 1400,
					"h": 660
				}
			},
			{
				"item": "viz_BQPdbt1a",
				"type": "block",
				"position": {
					"x": 20,
					"y": 3080,
					"w": 1400,
					"h": 380
				}
			},
			{
				"item": "viz_iAnquG5k",
				"type": "block",
				"position": {
					"x": 20,
					"y": 2190,
					"w": 1400,
					"h": 420
				}
			},
			{
				"item": "viz_kWeWWmHq",
				"type": "block",
				"position": {
					"x": 20,
					"y": 1300,
					"w": 1400,
					"h": 400
				}
			},
			{
				"item": "viz_5IOi3LhA",
				"type": "block",
				"position": {
					"x": 10,
					"y": 3490,
					"w": 1420,
					"h": 1120
				}
			},
			{
				"item": "viz_muYPdt8O",
				"type": "block",
				"position": {
					"x": 20,
					"y": 3800,
					"w": 1400,
					"h": 390
				}
			},
			{
				"item": "viz_l671BH1P",
				"type": "block",
				"position": {
					"x": 10,
					"y": 4620,
					"w": 1420,
					"h": 810
				}
			},
			{
				"item": "viz_yEPX18Iq",
				"type": "block",
				"position": {
					"x": 20,
					"y": 5030,
					"w": 690,
					"h": 380
				}
			},
			{
				"item": "viz_0ffUgM5f",
				"type": "block",
				"position": {
					"x": 720,
					"y": 5030,
					"w": 700,
					"h": 380
				}
			},
			{
				"item": "viz_ycEBatHj",
				"type": "block",
				"position": {
					"x": 720,
					"y": 4660,
					"w": 700,
					"h": 350
				}
			},
			{
				"item": "viz_TsyE54jL",
				"type": "block",
				"position": {
					"x": 20,
					"y": 4660,
					"w": 690,
					"h": 350
				}
			},
			{
				"item": "viz_NkE8fLjz",
				"type": "block",
				"position": {
					"x": 20,
					"y": 6350,
					"w": 1400,
					"h": 380
				}
			},
			{
				"item": "viz_BUBlHZYS",
				"type": "block",
				"position": {
					"x": 20,
					"y": 4200,
					"w": 1400,
					"h": 400
				}
			},
			{
				"item": "viz_YVs9Ss6o",
				"type": "block",
				"position": {
					"x": 20,
					"y": 6750,
					"w": 1400,
					"h": 510
				}
			},
			{
				"item": "viz_8gzB64Hy",
				"type": "block",
				"position": {
					"x": 20,
					"y": 3530,
					"w": 1400,
					"h": 260
				}
			},
			{
				"item": "viz_qDf3tilf",
				"type": "block",
				"position": {
					"x": 20,
					"y": 5500,
					"w": 1400,
					"h": 780
				}
			},
			{
				"item": "viz_Jj2IOc2j",
				"type": "block",
				"position": {
					"x": 20,
					"y": 2620,
					"w": 1400,
					"h": 420
				}
			}
		],
		"globalInputs": [
			"input_rl8cqGDh",
			"input_JBiR4uV0"
		]
	},
	"title": "Client Steering",
	"description": "",
	"defaults": {
		"dataSources": {
			"ds.search": {
				"options": {
					"queryParameters": {
						"latest": "$global_time.latest$",
						"earliest": "$global_time.earliest$"
					}
				}
			}
		}
	}
}
    ]]></definition>
    <meta type="hiddenElements"><![CDATA[
{
	"hideEdit": false,
	"hideOpenInSearch": false,
	"hideExport": false
}
    ]]></meta>
</dashboard>