
<dashboard version="2" theme="dark">
    <label>Client version information</label>
    <description></description>
    <definition><![CDATA[
{
	"dataSources": {
		"ds_z0jEHn3e": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 sourcetype=nsconfig host=\"$field1$\" source=\"*nsconfig.json\" AND NOT source=\"*prelogon_nsconfig.json\"\n| rename clientConfig.configurationName as \"001. Client Configuration name\"\n| eval \"002. Last config sync time\"=strftime('cache.configUpdateTimestamp', \"%Y/%m/%d %H:%M:%S\")\n| eval \"004. The time when the last upgrade check was performed\"=strftime('cache.lastClientUpdatedTimestamp', \"%Y/%m/%d %H:%M:%S\")\n| rename \nclientConfig.clientUpdate.allowAutoUpdate as \"003. Enable autoupdate?\"\nclientConfig.clientUpdate.updateIntervalInMin as \"005. Upgrade check interval\",\nclientConfig.clientUpdate.allowAutoGoldenUpdate as \"006. Auto update to Goalden release?\",\nclientConfig.clientUpdate.goldenReleaseVersion as \"007. Specifc golden release?\",\nclientConfig.clientUpdate.goldenDotReleaseUpdate as \"008. Opt-in dot upgrade of the specific golden release\",\nclientConfig.clientUpdate.showUpdateNotification as \"009. Show upgrade notification to end users?\",\nclientConfig.clientUpdate* as \"010. clientConfig.clientUpdate*\",\n| table 0*\n| transpose 0 column_name=\"header\":\n| fields - \"column\"",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "nsconfig.json - update settings"
		},
		"ds_3BW1BQjy": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\"  \"clientStatusHandler client status message: \"\n| head 1\n| rex field=_raw \"clientStatusHandler\\sclient\\sstatus\\smessage:\\s(?<client_status>.*)\"\n| spath input=client_status\n| rename \nclient_status.host_info.device_make as \"01. Device Maker\", \nclient_status.host_info.device_model as \"02. Device Model\",\nclient_status.host_info.os as \"03. Host OS\",\nclient_status.host_info.os_version as \"04. Host OS version\",\nclient_status.host_info.hostname as \"05. Host name\",\nclient_status.host_info.macAddresses{} as \"06. Host MAC address\",\nclient_status.host_info.serialNumber as \"07. Host serial number\"\nclient_status.host_info.nsdeviceuid as \"08. Host nsdebviceuid\",\nclient_status.host_info.old_nsdeviceuid as \"09. old_nsdeviceuid\",\n| eval \"10. Last update time\"=strftime('client_status.host_info.last_hostinfo_update_timestamp', \"%Y/%d/%m %H:%M:%S\")\n| table 0*, 1*\n| transpose\n",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Client Status Handler"
		},
		"ds_7CpRsbSg": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\"\n| stats earliest(_time) AS Earliest, latest(_time) AS Latest by sourcetype\n| convert timeformat=\"%Y-%m-%d %H:%M:%S\" ctime(Earliest) ctime(Latest)",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "Log_timestamps"
		},
		"ds_6a2VT9JD": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog\n| table host\n| dedup host\n| sort -host",
				"queryParameters": {
					"earliest": "-2mon",
					"latest": "now"
				}
			},
			"name": "Select Client log"
		},
		"ds_MRGQyb8i": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\" \"clientStatusHandler client status message: \"\n| rex field=_raw \"clientStatusHandler\\sclient\\sstatus\\smessage:\\s(?<client_status>.*)\"\n| spath input=client_status\n| rename client_status.client_version as version\n| stats count by version",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Client Version"
		},
		"ds_lmo8JfHa": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=STAUpdate \"Verbose logging\" OR \"Running installation\" OR \": Windows \" \n| sort _time \n| table  _raw\n",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Mac install log"
		},
		"ds_mJF3HiBv_ds_lmo8JfHa": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" (sourcetype=nsdebuglog OR sourcetype=stagentUI) \"Config new client version\" OR \"Config download path for client update\" OR \"Config trying to download\" OR \"client auto update\" OR \"starting =\" OR \"Config version json\" OR \"ready to be installed\" OR \"Did not statisfy\" OR \" UPDATE_AVAILABLE \" OR \"Failed to open msi\" OR \"Agent installer path\" OR \"Schedule upgrade\"\n| table _raw\n| sort _raw",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Update history"
		},
		"ds_4qbss7jP": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 sourcetype=nsdebuglog host=\"$field1$\" \"clientStatusHandler client status message: \"\n| sort -_raw\n| rex field=_raw \"clientStatusHandler\\sclient\\sstatus\\smessage:\\s(?<client_status>.*)\"\n| spath input=client_status\n| rename client_status.client_version as version\n| table _time, version\n| dedup consecutive=true version\n| sort _time",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "Client version table"
		},
		"ds_QVwAdiuD_ds_lmo8JfHa": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_client1 host=\"$field1$\" sourcetype=nsinstall \"netskope*\" OR \"stagent\" OR \" ----- \"\n| sort _raw\n| table _raw\n",
				"queryParameters": {
					"earliest": "$tr_n9GlxAEz.earliest$",
					"latest": "$tr_n9GlxAEz.latest$"
				}
			},
			"name": "install.log - Mac"
		},
		"ds_xh0scyrN_ds_3BW1BQjy": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 sourcetype=\"nsconfig\" source=\"*nsuserconfig.json\" host=\"$field1$\" \n| eval peruseconfig=if('nsUserConfig.enablePerUserConfig'=\"true\", \"Enabled\", \"Disabled\")\n| table peruseconfig\n",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "Peruserconfig check"
		},
		"ds_2BX7JNGj_ds_xh0scyrN_ds_3BW1BQjy": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 sourcetype=\"nsconfig\" source=\"*nsuserconfig.json\" host=\"$field1$\" \n| table nsUserConfig*\n| transpose 0 column_name=\"header\":\n",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "Peruserconfig check1"
		},
		"ds_9djM1het_ds_xh0scyrN_ds_3BW1BQjy": {
			"type": "ds.search",
			"options": {
				"query": "index=netskope_json1 source=\"*nsconfig.json\" AND NOT source=\"*prelogon_nsconfig.json\" host=\"$field1$\"\n| table clientConfig.enableClientSelfProtection\n\n| eval enableClientSelfProtection=if('clientConfig.enableClientSelfProtection'=\"true\", \"Enabled\", \"Disabled\")\n| table enableClientSelfProtection",
				"queryParameters": {
					"earliest": "0",
					"latest": ""
				}
			},
			"name": "SelfProtection check"
		}
	},
	"visualizations": {
		"viz_YJmfv1Oa": {
			"type": "splunk.table",
			"options": {
				"count": 20,
				"dataOverlayMode": "none",
				"drilldown": "none",
				"showRowNumbers": false,
				"showInternalFields": false,
				"columnFormat": {
					"row 1": {
						"width": 60
					}
				},
				"fontSize": "large"
			},
			"dataSources": {
				"primary": "ds_z0jEHn3e"
			},
			"title": "nsconfig.json - update settings"
		},
		"viz_SiHvXTuW": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Version information",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_ohGSEHnO": {
			"type": "splunk.pie",
			"options": {},
			"dataSources": {
				"primary": "ds_MRGQyb8i"
			}
		},
		"viz_7cnN1jRc": {
			"type": "splunk.table",
			"options": {
				"fontSize": "small"
			},
			"dataSources": {
				"primary": "ds_4qbss7jP"
			},
			"containerOptions": {},
			"showProgressBar": false,
			"showLastUpdated": false
		},
		"viz_TLuKPlMI": {
			"type": "splunk.table",
			"options": {
				"columnFormat": {
					"_time": {
						"width": 60
					}
				},
				"fontSize": "extraSmall",
				"count": 200
			},
			"dataSources": {
				"primary": "ds_lmo8JfHa"
			},
			"containerOptions": {
				"visibility": {
					"hideWhenNoData": true
				}
			},
			"title": "STAUpdate.txt - Win"
		},
		"viz_98JzQGKv": {
			"type": "splunk.table",
			"options": {
				"columnFormat": {
					"_time": {
						"width": 60
					}
				},
				"fontSize": "extraSmall",
				"count": 200
			},
			"dataSources": {
				"primary": "ds_mJF3HiBv_ds_lmo8JfHa"
			},
			"containerOptions": {
				"visibility": {}
			},
			"title": "nsdebuglog - version history"
		},
		"viz_XI6ckYz0": {
			"type": "splunk.table",
			"options": {
				"columnFormat": {
					"_time": {
						"width": 60
					}
				},
				"fontSize": "extraSmall",
				"count": 200
			},
			"dataSources": {
				"primary": "ds_QVwAdiuD_ds_lmo8JfHa"
			},
			"containerOptions": {
				"visibility": {
					"hideWhenNoData": true
				}
			},
			"title": "install.log - Mac"
		},
		"viz_UOyatiIX": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Update setting",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		},
		"viz_mkU9Onvj": {
			"type": "splunk.markdown",
			"options": {
				"markdown": "### Support policy\n\nN-2 golden relases are supported.\n\nhttps://support.netskope.com/s/article/Download-Netskope-Client-and-Scripts\n\nSupport platform\n\nhttps://docs.netskope.com/en/netskope-client-supported-os-and-platform/\n",
				"backgroundColor": "#708794",
				"fontSize": "extraLarge"
			}
		}
	},
	"inputs": {
		"input_isTAf6kn": {
			"options": {
				"items": [],
				"token": "field1"
			},
			"title": "Select Client log",
			"type": "input.dropdown",
			"dataSources": {
				"primary": "ds_6a2VT9JD"
			}
		},
		"input_JBiR4uV0": {
			"options": {
				"defaultValue": "0,",
				"token": "tr_n9GlxAEz"
			},
			"title": "Time Range Input Title",
			"type": "input.timerange"
		}
	},
	"layout": {
		"type": "absolute",
		"options": {
			"width": 1440,
			"height": 3600
		},
		"structure": [
			{
				"item": "viz_SiHvXTuW",
				"type": "block",
				"position": {
					"x": 10,
					"y": 870,
					"w": 1410,
					"h": 2720
				}
			},
			{
				"item": "viz_ohGSEHnO",
				"type": "block",
				"position": {
					"x": 20,
					"y": 910,
					"w": 640,
					"h": 140
				}
			},
			{
				"item": "viz_7cnN1jRc",
				"type": "block",
				"position": {
					"x": 680,
					"y": 910,
					"w": 450,
					"h": 140
				}
			},
			{
				"item": "viz_TLuKPlMI",
				"type": "block",
				"position": {
					"x": 20,
					"y": 1680,
					"w": 1390,
					"h": 600
				}
			},
			{
				"item": "viz_98JzQGKv",
				"type": "block",
				"position": {
					"x": 20,
					"y": 1070,
					"w": 1390,
					"h": 600
				}
			},
			{
				"item": "viz_XI6ckYz0",
				"type": "block",
				"position": {
					"x": 20,
					"y": 2290,
					"w": 1380,
					"h": 600
				}
			},
			{
				"item": "viz_UOyatiIX",
				"type": "block",
				"position": {
					"x": 10,
					"y": 200,
					"w": 1410,
					"h": 650
				}
			},
			{
				"item": "viz_YJmfv1Oa",
				"type": "block",
				"position": {
					"x": 20,
					"y": 250,
					"w": 1370,
					"h": 580
				}
			},
			{
				"item": "viz_mkU9Onvj",
				"type": "block",
				"position": {
					"x": 10,
					"y": 10,
					"w": 1410,
					"h": 180
				}
			}
		],
		"globalInputs": [
			"input_isTAf6kn",
			"input_JBiR4uV0"
		]
	},
	"title": "Client version information",
	"description": "",
	"defaults": {
		"dataSources": {
			"ds.search": {
				"options": {
					"queryParameters": {
						"latest": "$global_time.latest$",
						"earliest": "$global_time.earliest$"
					}
				}
			}
		}
	}
}
    ]]></definition>
    <meta type="hiddenElements"><![CDATA[
{
	"hideEdit": false,
	"hideOpenInSearch": false,
	"hideExport": false
}
    ]]></meta>
</dashboard>